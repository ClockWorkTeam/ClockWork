#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Procedura di Verifica e Validazione
\end_layout

\begin_layout Standard
Di seguito vengono riportate le norme che regolano le attività di verifica
 riguaranti al codice
\begin_inset Foot
status open

\begin_layout Plain Layout
Per una specifica dettagliata delle tecniche e delle modalità con cui verranno
 condotte tali attività si rimanda al 
\family typewriter
Piano_di_Qualifica_v2.0.pdf
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Analisi statica 
\begin_inset CommandInset label
LatexCommand label
name "Analisi-statica"

\end_inset


\end_layout

\begin_layout Itemize

\series bold
Analisi del flusso di controllo:
\series default
 si verificherà, analizzando i vari flussi possibili, che il codice segua
 la sequenza specificata.
 Si accerterà che il codice sia ben strutturato, che non esistano parti
 di codice che non vengono mai raggiunte o che non terminano.
\end_layout

\begin_layout Itemize

\series bold
Analisi di flusso dei dati:
\series default
 bisogna assicurare che il flusso di dati non usi variabili non ancora inizializ
zate o prive di valore, oppure che si scriva più volte prima di usare una
 variabile
\end_layout

\begin_layout Itemize

\series bold
Analisi flusso d'informazione:
\series default
 bisogna verificare che input ed output di ogni unità di codice (o più unità)
 rientrino nelle specifiche del programma
\end_layout

\begin_layout Itemize

\series bold
Verifica formale del codice:
\series default
 bisogna verificare la correttezza del codice rispetto alla specifica dei
 requisiti
\end_layout

\begin_layout Subsection
Analisi dinamica 
\begin_inset CommandInset label
LatexCommand label
name "Test"

\end_inset


\end_layout

\begin_layout Itemize

\series bold
Test di unità:
\series default
 test applicati alle singole unità di sistema al fine di verificare la presenza
 di malfunzionamenti.
 Bisognerà fare tali test con il massimo grado di parallelismo
\end_layout

\begin_layout Itemize

\series bold
Test di integrazione:
\series default
 test effettuato per verificare che i componenti formati dall'unione delle
 varie unità che hanno superato il test di unità cooperino nel modo corretto
\end_layout

\begin_layout Itemize

\series bold
Test di sistema ed accettazione:
\series default
 test eseguito sull’intero sistema allo scopo di accertare che il sistema
 prodotto adempie ai requisiti richiesti, che riesca ad adattarsi correttamente
 al contesto richiesto dal proponente.
 L'accettazione sarà sul software finito e, se superata, seguirà il rilascio
 del prodotto
\end_layout

\begin_layout Itemize
Test
\end_layout

\begin_layout Subsubsection
Procedure dei test
\end_layout

\begin_layout Standard
I passi per effettuare test sono:
\end_layout

\begin_layout Enumerate
Definizione del test sul componente: 
\end_layout

\begin_deeper
\begin_layout Itemize
Se il componente soggetto a test è un componente attivo, e non sono state
 prodotte le componenti passive pilotate da tale componente, il test dovrà
 definire gli 
\bar under
stub
\bar default
 necessari
\end_layout

\begin_layout Itemize
Se il componente soggetto a test è un componente passivo e ancora non sono
 state prodotte le componenti attive che pilotano il componente soggetto
 a test, il test dovrà definire i driver necessari 
\end_layout

\end_deeper
\begin_layout Enumerate
Preparazione del caso di prova: l’esecuzione del test deve avvenire in un
 definito ambiente, con dati in ingresso controllati, e devono essere definiti
 gli output attesi; i dati in input devono essere distinti in 3 classi di
 equivalenza:
\end_layout

\begin_deeper
\begin_layout Itemize
Interni al dominio
\end_layout

\begin_layout Itemize
Al limite del dominio 
\end_layout

\begin_layout Itemize
Al di fuori del dominio
\end_layout

\end_deeper
\begin_layout Enumerate
Esecuzione del test sul componente
\end_layout

\begin_layout Enumerate
Analisi dei risultati ottenuti con quelli attesi
\end_layout

\begin_layout Enumerate
Se i risultati ottenuti differiscono da quelli attesi comunicare gli errori
 tramite appositi ticket, correggere gli errori e rieseguire il test; altrimenti
 procedere con la registrazione dei risultati
\end_layout

\end_body
\end_document
