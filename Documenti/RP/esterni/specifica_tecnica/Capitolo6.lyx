#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Back-End
\end_layout

\begin_layout Subsection
Transfer Layer
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\end_layout

\begin_layout Standard
 lo strato Transfer si occupa della comunicazione tra il client e il server
\end_layout

\begin_layout Standard
\noindent

\series bold
Relazioni d'uso con altre componenti:
 lo strato Transfer interagisce con i package mytalk.server.functionmanager e mytalk.server.usermanager e con lo strato 
 mytalk.client.presenter
\end_layout

\begin_layout Subsubsection
mytalk.server.transfer.CallTransfer
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\end_layout

\begin_layout Standard
 la classe si occupa di far arrivare i dati all'apparato logico al fine di inizializzare la chiamata
\end_layout

\begin_layout Standard
\noindent

\series bold
Relazioni d'uso con altre componenti:
\end_layout

\begin_layout Standard
 la classe viene contattata e si rivolge a mytalk.client.presenter..... e mytalk.server.functionmanager.CallManager
\end_layout

\begin_layout Standard
\noindent

\series bold
Attivita svolte e dati trattati:
\end_layout

\begin_layout Standard
 la classe gestisce il trasferimento della richiesta di chiamata dal client al server e riferisce al server la situazione
 della chiamata
\end_layout

\begin_layout Subsubsection
mytalk.server.transfer.AuthenticationTransfer
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\end_layout

\begin_layout Standard
tale classe si occupa del trasferimento delle richieste di autenticazione al server
\end_layout

\begin_layout Standard
\noindent

\series bold
Relazioni d'uso con altre componenti:
\end_layout

\begin_layout Standard
la classe viene utilizzata da mytalk.client.presenter... e mytalk.server.usermanager.AuthenticationManager
\end_layout

\begin_layout Standard
\noindent

\series bold
Attivita svolte e dati trattati:
\end_layout

\begin_layout Standard
la classe riceve da ***client*** richieste di autenticazione e manda i dati a mytalk.server.usermanager.AuthenticationManager
\end_layout

\begin_layout Subsubsection
mytalk.server.transfer.UserDataTransfer
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\end_layout

\begin_layout Standard
tale classe si occupa del trasferimento dei dati riguardanti gli utenti al fine di effettuare nuove registrazioni o di visualizzare ed eventualmente modificare i dati persistenti
\end_layout

\begin_layout Standard
\noindent

\series bold
Relazioni d'uso con altre componenti:
\end_layout

\begin_layout Standard
tale classe comunica con mytalk.client.presenter.... e mytalk.server.usermanager.UserDataManager
\end_layout

\begin_layout Standard
\noindent

\series bold
Attivita svolte e dati trattati:
\end_layout

\begin_layout Standard
la classe riceve da ***client*** richieste di visualizzazione o modifica dei dati presenti nella base di dati
 e dialoga con mytalk.server.usermanager.UserDataManager per eseguire le operazioni richieste
\end_layout

\begin_layout Subsubsection
mytalk.server.transfer.RecordMessageTransfer
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\end_layout

\begin_layout Standard
tale classe si occupa del trasferimento del messaggio registrato dal client al server e del seguente invio al destinatario
\end_layout

\begin_layout Standard
\noindent

\series bold
Relazioni d'uso con altre componenti:
\end_layout

\begin_layout Standard
la classe comunica con mytalk.server.manager.RecordMessageManager e mytalk.client.presenter....
\end_layout

\begin_layout Standard
\noindent

\series bold
Attivita svolte e dati trattati:
\end_layout

\begin_layout Standard
tale classe riceve dal client il messaggio registrato e l'utente a cui mandarlo e passa tali dati
 a mytalk.server.manager.RecordMessageManager.
In seguito una volta ricevuto il video da mytalk.server.manager.RecordMessageManager lo manda al destinatario
\end_layout

\begin_layout Subsubsection
mytalk.server.transfer.NotificationTransfer
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\end_layout

\begin_layout Standard
tale classe si occupa di avvisare i client di eventuali notifiche dovute ad eventi generati da altri utenti
\end_layout

\begin_layout Standard
\noindent

\series bold
Relazioni d'uso con altre componenti:
\end_layout

\begin_layout Standard
la classe comunica con mytalk.client.presenter.... e viene chiamata da mytalk.server.functionmanager.RecordMessageManager,
 mytalk.server.functionmanager.CallManager
\end_layout

\begin_layout Standard
\noindent

\series bold
Attivita svolte e dati trattati:
\end_layout

\begin_layout Standard
tale classe manda al client messaggi che riguardano eventi esterni come una chiamata in corso o
la presenza sul server di un messaggio registrato in attesa
\end_layout

\begin_layout Subsection
Manager Layer
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\end_layout

\begin_layout Standard
lo strato Manager del server si occupa delle funzionalità logiche del server e della lettura e della modifica della base di dati
\end_layout

\begin_layout Standard
\noindent

\series bold
Relazioni d'uso con altre componenti:
\end_layout

\begin_layout Standard
lo strato Manager agisce sullo strato Data per visualizzare o modificare i dati e comunica in modo bidirezionale con lo strato Transfer
\end_layout

\begin_layout Subsubsection
mytalk.server.functionmanager.CallManager
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\end_layout

\begin_layout Standard
tale classe ha il compito di inizializzare la chiamata tra due utenti
\end_layout

\begin_layout Standard
\noindent

\series bold
Relazioni d'uso con altre componenti:
\end_layout

\begin_layout Standard
tale classe viene contattata e comunica con mytalk.server.transfer.CallTransfer e mytalk.server.transfer.NotificationTransfer
\end_layout

\begin_layout Standard
\noindent

\series bold
Attivita svolte e dati trattati:
\end_layout

\begin_layout Standard
tale classe si occuperà di inizializzare la chiamata tramite WebSocket, comunicando a mytalk.server.transfer.CallTransfer la situazione della chiamata che
 sta venendo effettuata e a mytalk.server.transfer.NotificationTransfer che tipo di operazione sia stata rivolta verso il destinatario e da parte di chi
\end_layout

\begin_layout Subsubsection
mytalk.server.functionManager.RecordMessageManager
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\end_layout

\begin_layout Standard
tale classe ha l'obiettivo di gestire la persistenza dei messaggi da mandare
 in differita
\end_layout

\begin_layout Standard
\noindent

\series bold
Relazioni d'uso con altre componenti:
\end_layout

\begin_layout Standard
tale classe riceve dati da mytalk.server.transfer.RecordMessageTransfer e salva i messaggi in mytalk.server.data.RecordMessageData 
\end_layout

\begin_layout Standard
\noindent

\series bold
Attivita svolte e dati trattati:
\end_layout

\begin_layout Standard
tale classe si occupa del salvataggio, della cancellazione e dell'invio a mytalk.server.transfer.RecordMessageTransfer dei messaggi registrati
 e del loro invio
\end_layout

\begin_layout Subsubsection
mytalk.server.functionManager.TutorialManager
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\end_layout

\begin_layout Standard
tale classe si occupa della gestione dei collegamenti ai tutorial
\end_layout

\begin_layout Standard
\noindent

\series bold
Relazioni d'uso di altre componenti:
\end_layout

\begin_layout Standard
Tale classe utilizza mytalk.server.data.TutorialData per scrivere e leggere
 i collegamenti ai video tutorial e mytalk.server.transfer.TutorialTransfer per
 per far giungere tali link al client.
\end_layout

\begin_layout Standard
\noindent

\series bold
Interfacce con e relazioni d'uso da altre componenti:
\end_layout

\begin_layout Standard
\noindent

\series bold
Attivita svolte e dati trattati:
\end_layout

\begin_layout Standard
Tale classe si occupa di accedere ai collegamenti ai tutorial presenti nella base di dati
e del loro invio alla classe mytalk.server.transfer.TutorialTransfer
\end_layout

\begin_layout Subsubsection
mytalk.server.userManager.AuthenticationManager
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\end_layout

\begin_layout Standard
Tale classe si occupa di stabilire la riuscita o il fallimento di un tentativo
 di autenticazione da parte di un utente e riferire il risultato a ....
\end_layout

\begin_layout Standard
\noindent

\series bold
Relazioni d'uso di altre componenti:
\end_layout

\begin_layout Standard
La classe utilizza mytalk.server.data.UserData per verificare la correttezza
 dei dati.
\end_layout

\begin_layout Standard
\noindent

\series bold
Interfacce con e relazioni d'uso da altre componenti:
\end_layout

\begin_layout Standard
La classe riceve i dati da mytalk.server.transfer.UserTransfer ( ???? ) 
\end_layout

\begin_layout Standard
\noindent

\series bold
Attivita svolte e dati trattati:
\end_layout

\begin_layout Standard
Tale classe deve controllare la base di dati mytalk.server.data.UserData 
 per verificare se un tentativo di autenticazione sia riuscito o meno e per
 effettuare il logout. *****
\end_layout

\begin_layout Subsubsection
mytalk.server.userManager.UserDataManager
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\end_layout

\begin_layout Standard
Tale classe si occupa delle operazioni di aggiornamento delle informazioni
 sugli utenti, quali nuove registrazioni e modifiche degli account.
\end_layout

\begin_layout Standard
\noindent

\series bold
Relazioni d'uso di altre componenti:
\end_layout

\begin_layout Standard
La classe agisce su mytalk.server.data.UserData.
\end_layout

\begin_layout Standard
\noindent

\series bold
Interfacce con e relazioni d'uso da altre componenti:
\end_layout

\begin_layout Standard
Tale classe viene utilizzata da mytalk.server.transfer.AuthenticationTransfer.
\end_layout

\begin_layout Standard
\noindent

\series bold
Attivita svolte e dati trattati:
\end_layout

\begin_layout Standard
Tale classe attende istruzioni da ..Transfer, controlla e eventualmente modifica la base di dati
 e ritorna a ...Transfer i risultati.
\end_layout

\begin_layout Subsection
Data Layer
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\end_layout

\begin_layout Standard
Lo strato Data contiene le informazioni utilizzate dal prodotto MyTalk.
\end_layout

\begin_layout Standard
\noindent

\series bold
Relazioni d'uso di altre componenti:
\end_layout

\begin_layout Standard
Lo strato Data viene utilizzato da mytalk.server.userManager e mytalk.server.function
Manager per salvare e reperire informazioni dalla base di dati.
\end_layout

\begin_layout Subsubsection
mytalk.server.data.UserData
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\end_layout

\begin_layout Standard
Tale classe è un semplice contenitore di informazioni.
\end_layout

\begin_layout Standard
\noindent

\series bold
Relazioni d'uso di altre componenti:
\end_layout

\begin_layout Standard
Essendo un semplice contenitore di informazioni la classe non utilizza altre
 componenti.
\end_layout

\begin_layout Standard
\noindent

\series bold
Interfacce con e relazioni d'uso da altre componenti:
\end_layout

\begin_layout Standard
Le classi che si interfacciano con tale classe sono quelle contenute nel
 package mytalk.server.userManager.
\end_layout

\begin_layout Standard
\noindent

\series bold
Attivita svolte e dati trattati:
\end_layout

\begin_layout Standard
 Al suo interno vengono preservate le informazioni riguardanti gli utenti, ovvero username,
 password, nome, cognome e indirizzo IP.
\end_layout

\begin_layout Subsubsection
mytalk.server.data.RecordMessageData
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\end_layout

\begin_layout Standard
Tale classe è un semplice contenitore di informazioni.
\end_layout

\begin_layout Standard
\noindent

\series bold
Relazioni d'uso di altre componenti:
\end_layout

\begin_layout Standard
Essendo un semplice contenitore di informazioni la classe non utilizza altre
 componenti.
\end_layout

\begin_layout Standard

\series bold
Interfacce con e relazioni d'uso da altre componenti:
\end_layout

\begin_layout Standard
La classe che utilizza tale classe è mytalk.serve
r.functionManager.RecordMessageManager.
\end_layout

\begin_layout Standard
\noindent

\series bold
Attivita svolte e dati trattati:
\end_layout

\begin_layout Standard
 Al suo interno vengono salvati i messaggi registrati da mandare in differita.
\end_layout

\begin_layout Subsubsection
mytalk.server.data.TutorialData
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\end_layout

\begin_layout Standard
Tale classe è un semplice contenitore di informazioni.
\end_layout

\begin_layout Standard
\noindent

\series bold
Relazioni d'uso di altre componenti:
\end_layout

\begin_layout Standard
Essendo un semplice contenitore di informazioni la classe non utilizza altre
 componenti.
\end_layout

\begin_layout Standard
\noindent

\series bold
Interfacce con e relazioni d'uso da altre componenti:
\end_layout

\begin_layout Standard
La classe è utilizzata da mytalk.server.functionManager.TutorialManager.
\end_layout

\begin_layout Standard
\noindent

\series bold
Attivita svolte e dati trattati:
\end_layout

\begin_layout Standard
La classe preserva i collegamenti ai tutorial video. 
\end_layout

\end_body
\end_document
