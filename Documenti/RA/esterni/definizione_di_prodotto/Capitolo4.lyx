#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Specifica Client
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/packageClient.pdf
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Architettura del client
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Il client contiene i seguenti package:
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.view
\family default
 (vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Package-View"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.communication
\family default
 (vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Package-Communication"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.collection
\family default
 (vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Package-Collection"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.model
\family default
 (vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Package-Model"

\end_inset

)
\end_layout

\begin_layout Subsection
Package view
\begin_inset CommandInset label
LatexCommand label
name "sub:Package-View"

\end_inset


\end_layout

\begin_layout Standard
Il package 
\family typewriter
mytalk.client.view
\family default
 costituisce la parte del sistema che definisce ed implementa l'interfaccia
 web usufruibile dagli utenti mediante pagine web.
 Diversamente da uno schema di tipo MVC il package view contiene non solo
 le parti di interfaccia ma anche parti logiche, come previsto dal framework
 Backbone.js, che prevede uno schema di tipo MV*.
\end_layout

\begin_layout Paragraph
Costituito dalle classi:
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.view.AuthenticationView
\family default
 (vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:AuthenticationView"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.view.CallView 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:CallView"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.view.ChatView 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:ChatView"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.view.ContactView 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:ContactView"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.view.FileView 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:.FileView"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.view.FunctionsView 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:FunctionsView"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.view.NotificationView 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:NotificationView"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.view.RecordMessageView 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:RecordMessageView"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.view.SideView 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:SideView"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.view.StatisticsView 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:StatisticsView"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.view.TutorialView 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:.TutorialView"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.view.UserDataView 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:UserDataView"

\end_inset

)
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.view.AuthenticationView
\begin_inset CommandInset label
LatexCommand label
name "sub:AuthenticationView"

\end_inset


\end_layout

\begin_layout Standard
La classe AuthenticationView deve definire la struttura, e la conseguente
 visualizzazione, della parte della pagina web che consente di effettuare
 la registrazione, l'accesso e la disconnessione dal sistema.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/view/pdf/AuthenticationView.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe AuthenticationView
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[DOM element] el:
\series default
 elemento DOM al quale Ã¨ legata la classe
\end_layout

\begin_layout Itemize
[
\series bold
SideView
\series default
]
\series bold
 contactsView:
\series default
 riferimento alla classe SideView
\end_layout

\begin_layout Itemize

\series bold
[UserDataView] userDataView:
\series default
 riferimento alla classe UserDataView
\end_layout

\begin_layout Itemize

\series bold
[UserModel] userModel: 
\series default
riferimento alla classe UserModel
\end_layout

\begin_layout Itemize

\series bold
[Template] template: 
\series default
riferimento al template utilizzato
\end_layout

\begin_layout Standard

\series bold
Eventi:
\end_layout

\begin_layout Itemize

\series bold
click button#login: 
\series default
evento che richiama la funzione  
\emph on
connect()
\end_layout

\begin_layout Itemize

\series bold
click button#logout: 
\series default
evento che richiama la funzione 
\emph on
disconnect()
\end_layout

\begin_layout Itemize

\series bold
click button#signup: 
\series default
evento che richiama la funzione 
\emph on
viewSignup()
\end_layout

\begin_layout Itemize

\series bold
click button#sign: 
\series default
evento che richiama la funzione 
\emph on
signup()
\end_layout

\begin_layout Itemize

\series bold
click button#deny: 
\series default
evento che richiama la funzione 
\emph on
deny()
\end_layout

\begin_layout Itemize

\series bold
click button#edit:
\series default
evento che richiama la funzione 
\emph on
editProfile()
\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] initialize():
\series default
 metodo per inizializzare l'oggetto, si occupa di inizializzare 
\emph on
contactsView 
\emph default
e richiamare il metodo 
\emph on
render()
\end_layout

\begin_layout Itemize

\series bold
[void] render():
\series default
 metodo per effettuare la scrittura nella pagina del template AuthenticationTemp
late
\end_layout

\begin_layout Itemize

\series bold
[doLogin()] callBacks():
\series default
 metodo che permette ad altre classi di usufruire del metodo 
\emph on
doLogin(String, String, String[], AuthenticationView) 
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
[void] doLogin([String] username, [String] password, [String[]] result,
 [AuthenticationView] view)
\series default
: metodo che effettua l'operazione di login.
 Si occupa di creare il model corrispondente all'utente, aggiornare il template
 e invocare il metodo 
\emph on
getContacts(AuthenticationView) 
\emph default
sull'oggetto 
\emph on
contactsView
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
[void] connect():
\series default
 metodo che avvia l'operazione di login dell'utente richiamando il metodo
 
\emph on
checkCredentials(String, String, AuthenticationView.callBacks(), AuthenticatioVie
w) 
\emph default
della classe 
\emph on
AuthenticationCommunication
\emph default
 passandogli come parametri lo username e la password inseriti negli appositi
 campi
\end_layout

\begin_layout Itemize

\series bold
[void] disconnect():
\series default
 metodo che si occupa di chiudere la sessione con il server, invocando il
 metodo 
\emph on
logout(String)
\emph default
 della classe 
\emph on
AuthenticationCommunication
\emph default
,
\emph on
 
\emph default
aggiornando il template e deallocando 
\emph on
userDataView 
\emph default
e 
\emph on
contactsView
\end_layout

\begin_layout Itemize

\series bold
[void] viewSignup():
\series default
 metodo che permette la visualizzazione del form di registrazione
\end_layout

\begin_layout Itemize

\series bold
[void] signup():
\series default
 metodo che avvia l'operazione di registrazione dell'utente.
 Controlla che i campi obbligatori siano compilati e che la password e quella
 di conferma coincidano, in caso affermativo invocha il metodo 
\emph on
signup(String, String, String, String, AuthenticationView.callBacks(), Authentica
tionView) 
\emph default
della classe 
\emph on
AuthenticationCommunication
\emph default
 altrimenti mostra l'avviso di errore
\end_layout

\begin_layout Itemize

\series bold
[void] deny():
\series default
 metodo per annullare la compilazione della registrazione e tornare allo
 stato precedente alla registrazione
\end_layout

\begin_layout Itemize

\series bold
[void] editProfile()
\series default
: metodo che avvia l'operazione di modifica dati, inizializzando 
\emph on
userDataView.
 
\emph default
Prima di effettuare l'operazione controlla che tutte le view presenti nel
 content siano state chiuse
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.view.CallView
\begin_inset CommandInset label
LatexCommand label
name "sub:CallView"

\end_inset


\end_layout

\begin_layout Standard
La classe CallView deve definire la struttura, e la conseguente visualizzazione,
 della pagina di chiamata
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/view/pdf/CallView.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe CallView
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[DOM element] el:
\series default
 elemento DOM al quale Ã¨ legata la classe
\end_layout

\begin_layout Itemize

\series bold
[StatisticsView] statisticsView:
\series default
 riferimento alla classe StatisticsView
\end_layout

\begin_layout Itemize

\series bold
[Template] template: 
\series default
riferimento al template utilizzato
\end_layout

\begin_layout Itemize

\series bold
[boolean] calling: 
\series default
variabile che indica se l'utente Ã¨ occupato in una chiamata o no
\end_layout

\begin_layout Standard

\series bold
Eventi:
\end_layout

\begin_layout Itemize

\series bold
click button#endcall: 
\series default
evento che richiama la funzione 
\emph on
endcall()
\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] initialize():
\series default
 metodo per inizializzare l'oggetto, si occupa di inizializzare 
\emph on
statisticsView 
\emph default
e richiamare il metodo 
\emph on
render()
\end_layout

\begin_layout Itemize

\series bold
[void] render():
\series default
 metodo per effettuare la scrittura nella pagina del template CallTemplate
 e che verificha che sia in corso una chiamata e, in caso affermativo, invoca
 il metodo 
\shape italic
recoverCall()
\shape default
 di CallCommunication e il metodo 
\shape italic
render()
\shape default
 di StatisticsView.
 Altrimenti, a seconda che l'utente sia il chiamato o il chiamante, invoca
 i metodi 
\shape italic
sendAnswer(String, ContactModel, CallView)
\shape default
 o 
\shape italic
sendCall(String, ContactModel, CallView)
\shape default
 di CallCommunication e assegna a 
\emph on
calling 
\emph default
lo stato di chiamata
\end_layout

\begin_layout Itemize

\series bold
[void] endcall([boolean] isEnding): 
\series default
metodo che termina la chiamata in corso richiamando i metodi 
\shape italic
closeViewCall()
\shape default
 della classe FunctionsView, 
\emph on
close()
\emph default
 della classe stessa e 
\emph on
close() 
\emph default
della classe StatisticsView.
 Inoltre nel caso il metodo sia invocato dall'utente che ha deciso di chiudere
 la chiamata, viene invocato anche il metodo 
\emph on
endCall()
\emph default
 della classe CallCommunication.
\end_layout

\begin_layout Itemize

\series bold
[void] close():
\series default
 metodo che chiude l'istanza della classe creata
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.view.ChatView
\begin_inset CommandInset label
LatexCommand label
name "sub:ChatView"

\end_inset


\end_layout

\begin_layout Standard
La classe ChatView definisce la struttura, e la conseguente visualizzazione,
 della parte della pagina web che consente di effettuare comunicazioni testuali
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/view/pdf/ChatView.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe ChatView
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[DOM element] el:
\series default
 elemento DOM al quale Ã¨ legata la classe
\end_layout

\begin_layout Itemize

\series bold
[Template] template: 
\series default
riferimento al template utilizzato
\end_layout

\begin_layout Itemize

\series bold
[TextMessagesCollection] collection:
\series default
 riferimento alla classe TextMessagesCollection
\end_layout

\begin_layout Standard

\series bold
Eventi:
\end_layout

\begin_layout Itemize

\series bold
click button#send: 
\series default
evento che richiama la funzione 
\emph on
send()
\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] initialize():
\series default
 metodo per inizializzare l'oggetto, collega il metodo 
\emph on
render()
\emph default
 della classe alla collection in modo da richiamarlo ogni qual volta avvenga
 un cambiamento di quest'ultima
\end_layout

\begin_layout Itemize

\series bold
[void] render():
\series default
 metodo per effettuare la scrittura nella pagina del template ChatTemplate
 inoltre, invoca il metodo 
\shape italic
putMessages() 
\emph on
per visualizzare i messaggi scambiati fino ad ora
\end_layout

\begin_layout Itemize

\series bold
[void] putMessages()
\series default
: metodo che si occupa di prelevare dalla 
\shape italic
collection
\shape default
 tutti i messaggi di testo della conversazione scelta, e invoca la funzione
 
\shape italic
putMessage(TextMessageModel)
\emph on
 per permetterne la visualizzazione all'utente
\end_layout

\begin_layout Itemize

\series bold
[void] putMessage([TextMessageModel] message)
\series default
: metodo che si occupa della scrittura di un messaggio di testo, presente
 nella 
\emph on
collection,
\emph default
 all'interno della pagina
\end_layout

\begin_layout Itemize

\series bold
[void] send(): 
\series default
metodo per inviare un messaggio al contatto, per fare ciÃ² invoca il metodo
 
\shape italic
send(String, string)
\shape default
 della classe ChatCommunication, con parametri lo username del contatto
 e il testo del messaggio.
 Provvede anche ad aggiungere il messaggio a 
\shape italic
collection
\end_layout

\begin_layout Itemize

\series bold
[void] unrender():
\series default
 metodo per chiudere l'istanza, per fare ciÃ² rimuove da 
\shape italic
collection
\shape default
 la conversazione con l'utente e invoca il metodo 
\shape italic
close() 
\end_layout

\begin_layout Itemize

\series bold
[void] close(): 
\series default
metodo che chiude l'istanza della classe creata
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.view.ContactView
\begin_inset CommandInset label
LatexCommand label
name "sub:ContactView"

\end_inset


\end_layout

\begin_layout Standard
La classe ContactView consente la visualizzazione all'interno della pagina
 web di un singolo utente registrato 
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/view/pdf/ContactView.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe ContactView
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[DOM element] el:
\series default
 elemento DOM al quale Ã¨ legata la classe
\end_layout

\begin_layout Itemize

\series bold
[Template] template: 
\series default
riferimento al template utilizzato
\end_layout

\begin_layout Itemize

\series bold
[FunctionsView] currentFunctions: 
\series default
riferimento alla classe FunctionsView
\end_layout

\begin_layout Itemize

\series bold
[ContactModel] model:
\series default
 riferimento al model del contatto visualizzato
\end_layout

\begin_layout Standard

\series bold
Eventi:
\end_layout

\begin_layout Itemize

\series bold
click span.contact: 
\series default
evento che richiama la funzione 
\emph on
view()
\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] initialize():
\series default
 metodo per inizializzare l'oggetto, collega il metodo 
\emph on
render()
\emph default
 della classe al model in modo da richiamarlo ogni qual volta avvenga un
 cambiamento di quest'ultimo
\end_layout

\begin_layout Itemize

\series bold
[void] render():
\series default
 metodo per effettuare la scrittura nella pagina del template ContactTemplate
\end_layout

\begin_layout Itemize

\series bold
[void] view():
\series default
 metodo che si occupa di avviare la FunctionsView relativa al contatto.
 Prima di fare ciÃ² invoca il metodo 
\shape italic
closeOtherContacts(Strings)
\shape default
 della classe SideView per controllare che tutte le view presenti nel content
 siano state chiuse
\end_layout

\begin_layout Itemize

\series bold
[void] createCall([String] type):
\series default
 metodo che viene chiamato quando si accetta una chiamata in arrivo; invoca
 il metodo 
\shape italic
closeOtherContacts(String)
\shape default
 della classe SideView, per controllare che tutte le view presenti nel content
 siano state chiuse, e uno tra i metodi 
\shape italic
videocall(boolean)
\shape default
 o 
\shape italic
audiocall(boolean)
\emph on
, della classe FunctionsView,
\shape default
\emph default
 a seconda del tipo di chiamata passata dal parametro
\end_layout

\begin_layout Itemize

\series bold
[void] close():
\series default
 metodo che chiude l'istanza della classe creata invocando il metodo 
\shape italic
unrender() 
\emph on
della classe FunctionsView
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.view.FileView
\begin_inset CommandInset label
LatexCommand label
name "sub:.FileView"

\end_inset


\end_layout

\begin_layout Standard
La classe FileView definisce la struttura, e la conseguente visualizzazione,
 della parte della pagina web che consente di selezionare un file salvato
 in locale per mandarlo all'utente autenticato selezionato
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/view/pdf/FileView.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe FileView
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[DOM element] el:
\series default
 elemento DOM al quale Ã¨ legata la classe
\end_layout

\begin_layout Itemize

\series bold
[Template] template: 
\series default
riferimento al template utilizzato
\end_layout

\begin_layout Standard

\series bold
Eventi:
\end_layout

\begin_layout Itemize

\series bold
click button#sendFile: 
\series default
evento che richiama la funzione 
\emph on
sendFile()
\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] initialize():
\series default
 metodo per inizializzare l'oggetto, si occupa di richiamare il metodo 
\emph on
render()
\end_layout

\begin_layout Itemize

\series bold
[void] render():
\series default
 metodo per effettuare la scrittura nella pagina del template FileTemplate
\end_layout

\begin_layout Itemize

\series bold
[void] sendFile():
\series default
 metodo che invia il file al server, attraverso l'utilizzo del metodo 
\emph on
sendFile(String, File) 
\emph default
di FileCommunication
\end_layout

\begin_layout Itemize

\series bold
[void] close(): 
\series default
metodo che chiude l'istanza della classe creata
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.view.FunctionsView
\begin_inset CommandInset label
LatexCommand label
name "sub:FunctionsView"

\end_inset


\end_layout

\begin_layout Standard
La classe FunctionsView definisce la struttura, e la conseguente visualizzazione
, delle funzionalitÃ  offerte dopo aver selezionato un contatto
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/view/pdf/FunctionsView.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe FunctionsView
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[DOM element] el:
\series default
 elemento DOM al quale Ã¨ legata la classe
\end_layout

\begin_layout Itemize

\series bold
[Template] template: 
\series default
riferimento al template utilizzato
\end_layout

\begin_layout Itemize

\series bold
[CallView] callView: 
\series default
riferimento alla classe CallView
\end_layout

\begin_layout Itemize

\series bold
[ChatView] chatView:
\series default
 riferimento alla classe ChatView
\end_layout

\begin_layout Itemize

\series bold
[RecordMessageView] recordMessageView:
\series default
 riferimento alla classe RecordMessageView
\end_layout

\begin_layout Itemize

\series bold
[FileView] fileView:
\series default
 riferimento alla classe FileView
\end_layout

\begin_layout Standard

\series bold
Eventi:
\end_layout

\begin_layout Itemize

\series bold
click button#dataContact: 
\series default
evento che richiama la funzione 
\emph on
viewDataContact()
\end_layout

\begin_layout Itemize

\series bold
click button#sendVideoText: 
\series default
evento che richiama la funzione 
\emph on
sendVideoText()
\end_layout

\begin_layout Itemize

\series bold
click button#sendFile:
\series default
evento che richiama la funzione 
\emph on
sendFile()
\end_layout

\begin_layout Itemize

\series bold
click button#call: 
\series default
evento che richiama la funzione 
\emph on
audiocall()
\end_layout

\begin_layout Itemize

\series bold
click button#video: 
\series default
evento che richiama la funzione 
\emph on
videocall()
\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] initialize():
\series default
 metodo per inizializzare l'oggetto, collega il metodo 
\emph on
render()
\emph default
 della classe al model in modo da richiamarlo ogni qual volta avvenga un
 cambiamento di quest'ultimo
\end_layout

\begin_layout Itemize

\series bold
[void] render():
\series default
 metodo per effettuare la scrittura nella pagina del template FunctionsTemplate,
 per fare ciÃ² controlla se l'istanza Ã¨ stata creata da SideView o da ContactView
 e se esiste giÃ  una chiamata in corso, nel qual caso mostra la chiamata
\end_layout

\begin_layout Itemize

\series bold
[void] startChat():
\series default
 metodo per avviare una comunicazione testuale con il contatto, per fare
 ciÃ² inizializza 
\emph on
chatView
\emph default
, se non Ã¨ giÃ  esistente, e invoca il metodo 
\shape italic
render() 
\emph on
della classe ChatView
\end_layout

\begin_layout Itemize

\series bold
[void] sendVideoText():
\series default
 metodo per inizializzare la vista per la registrazione di un messaggio,
 per fare ciÃ² inizializza 
\shape italic
recordMessageView
\shape default
, se non Ã¨ giÃ  esistente, e invoca il metodo 
\shape italic
render() 
\emph on
della classe RecordMessageView
\shape default
\emph default
 
\end_layout

\begin_layout Itemize

\series bold
[void] sendFile():
\series default
 metodo per inizializzare la vista per l'invio di un file, per fare ciÃ²
 inizializza 
\shape italic
fileView
\shape default
, se non Ã¨ giÃ  esistente, e invoca il metodo 
\shape italic
render() 
\emph on
della classe fileView
\shape default
\emph default
 
\end_layout

\begin_layout Itemize

\series bold
[void] audiocall([boolean] isCaller):
\series default
 metodo per avviare una chiamata audio, per fare ciÃ² invoca il metodo 
\shape italic
call(boolean, String), 
\emph on
passando come parametri quello di audiocall e la stringa
\shape default
\emph default
 'audio'
\end_layout

\begin_layout Itemize

\series bold
[void] videocall([boolean] isCaller): 
\series default
metodo per avviare una chiamata audio, per fare ciÃ² invoca il metodo 
\shape italic
call(boolean, String), 
\emph on
passando come parametri quello di videocall e la stringa
\shape default
\emph default
 'video'
\end_layout

\begin_layout Itemize

\series bold
[void] call([boolean] isCaller, [String] type):
\series default
 metodo per gestire l'inizializzazione di una chiamata, per fare ciÃ² inizializza
 
\emph on
callView 
\emph default
e invoca il metodo 
\shape italic
render(boolean, String, ContactModel, boolean)
\emph on
 specificando se si Ã¨ il chiamante, il tipo di chiamata, il contatto con
 cui si sta comunicando e se si vuole registrare la chiamata.
 Inoltre si occupa di mantenere la chat attiva, richiamando il metodo 
\emph default
startChat() 
\end_layout

\begin_layout Itemize

\series bold
[void] forceClose():
\series default
 metodo che forza la chiusura di una chiamata invocando 
\shape italic
endcall() 
\emph on
della classe CallView
\end_layout

\begin_layout Itemize

\series bold
[void] closeViewCall():
\series default
 metodo che, a chiamata terminata, ripristina la vista
\end_layout

\begin_layout Itemize

\series bold
[void] viewDataContact():
\series default
 metodo che mostra i dati dell'utente selezionato
\end_layout

\begin_layout Itemize

\series bold
[void] unrender():
\series default
 metodo per chiudere definitivamente l'istanza, invoca il metodo 
\shape italic
unrender() 
\emph on
della classe ChatView
\shape default
\emph default
 e il metodo 
\shape italic
close()
\shape default
 della classe stessa
\end_layout

\begin_layout Itemize

\series bold
[void] close(): 
\series default
metodo che chiude l'istanza della classe creata e invoca il metodo 
\shape italic
close()
\emph on
 della classe ChatView
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.view.NotificationView
\begin_inset CommandInset label
LatexCommand label
name "sub:NotificationView"

\end_inset


\end_layout

\begin_layout Standard
La classe NotificationView definisce la struttura, e la conseguente visualizzazi
one, della parte della pagina per la segnalazione di notifiche
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/view/pdf/NotificationView.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe NotificationView
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[DOM element] el:
\series default
 elemento DOM al quale Ã¨ legata la classe
\end_layout

\begin_layout Itemize

\series bold
[Template] template: 
\series default
riferimento al template utilizzato
\end_layout

\begin_layout Itemize

\series bold
[boolean] timeout:
\series default
 variabile booleana che segnala quando non si risponde in tempo ad una notifica
 
\end_layout

\begin_layout Standard

\series bold
Eventi:
\end_layout

\begin_layout Itemize

\series bold
click button#acceptCall: 
\series default
evento che richiama la funzione 
\shape italic
acceptCall()
\end_layout

\begin_layout Itemize

\series bold
click button#refuseCall: 
\series default
evento che richiama la funzione 
\shape italic
refuseCall()
\end_layout

\begin_layout Itemize

\series bold
click button#viewMessage:
\series default
 evento che richiama la funzione 
\emph on
viewRecordMessage
\emph default
()
\end_layout

\begin_layout Itemize

\series bold
click button#ignoreMessage:
\series default
 evento che richiama la funzione 
\emph on
ignoreMessage
\emph default
()
\end_layout

\begin_layout Itemize

\series bold
click button#acceptFile
\series default
: evento che richiama la funzione 
\emph on
acceptFile
\emph default
()
\end_layout

\begin_layout Itemize

\series bold
click button#refuseFile
\series default
: evento che richiama la funzione 
\emph on
refuseFile()
\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] initialize():
\series default
 metodo per inizializzare l'oggetto, si occupa di inizializzare la variabile
 
\shape italic
timeout
\shape default
 a 
\emph on
true 
\emph default
e richiamare il metodo 
\emph on
render()
\end_layout

\begin_layout Itemize

\series bold
[void] render():
\series default
 metodo per effettuare la scrittura nella pagina del template NotificationTempla
te
\end_layout

\begin_layout Itemize

\series bold
[void] unrender():
\series default
 metodo per rimuovere la vista delle notifiche, invoca il metodo 
\shape italic
close()
\end_layout

\begin_layout Itemize

\series bold
[void] acceptCall():
\series default
 metodo per accettare una chiamata in arrivo, invoca il metodo 
\shape italic
unrender()
\shape default
 e assegna a 
\emph on
timeout
\emph default
 il valore 
\emph on
false, 
\emph default
infine invia un evento di tipo 
\emph on
acceptCall
\emph default
 per segnalare che si sta iniziando una chiamata
\end_layout

\begin_layout Itemize

\series bold
[void] timeoutCall():
\series default
 metodo per rifiutare una chiamata nel caso in cui non si risponda in tempo
 alla notifica, quindi se 
\emph on
timeout
\emph default
 risulta 
\emph on
false
\emph default
 chiama il metodo 
\shape italic
refuseCall()
\end_layout

\begin_layout Itemize

\series bold
[void] refuseCall(): 
\series default
metodo per rifiutare una chiamata, per fare ciÃ² invoca il metodo
\shape italic
 refuseCall(String)
\shape default
 della classe NotificationCommunication e il metodo 
\shape italic
unrender() 
\emph on
della classe stessa
\end_layout

\begin_layout Itemize

\series bold
[void] viewMessage(): 
\series default
metodo per visualizzare il messaggio video/audio ricevuto, invoca il metodo
 
\shape italic
unrender()
\shape default
 e invia un evento di tipo 
\emph on
viewMessage 
\emph default
che viene catturato da SideView
\end_layout

\begin_layout Itemize

\series bold
[void] ignoreMessage(): 
\series default
metodo per ignorare la visualizzazione del messaggio video/audio ricevuto,
 invoca il metodo 
\shape italic
unrender()
\shape default
 
\end_layout

\begin_layout Itemize

\series bold
[void] acceptFile():
\series default
 metodo per accettare la ricezione di un file in arrivo, scarica il file
 e invoca il metodo 
\shape italic
unrender()
\shape default
 
\end_layout

\begin_layout Itemize

\series bold
[void] refuseFile(): 
\series default
metodo per rifiutare la ricezione di un file in arrivo, per fare ciÃ² invoca
 il metodo
\shape italic
 refuseFile(String)
\shape default
 della classe NotificationCommunication e il metodo 
\shape italic
unrender() 
\emph on
della classe stessa
\end_layout

\begin_layout Itemize

\series bold
[void] close(): 
\series default
metodo che chiude l'istanza della classe creata
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.view.RecordMessageView
\begin_inset CommandInset label
LatexCommand label
name "sub:RecordMessageView"

\end_inset


\end_layout

\begin_layout Standard
La classe RecordMessageView definisce la struttura, e la conseguente visualizzaz
ione, della parte della pagina web per effettuare registrazioni audio o
 audio/video da inviare ad un utente registrato
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/view/pdf/RecordMessageView.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe RecordMessageView
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[DOM element] el:
\series default
 elemento DOM al quale Ã¨ legata la classe
\end_layout

\begin_layout Itemize

\series bold
[Template] template: 
\series default
riferimento al template utilizzato
\end_layout

\begin_layout Itemize

\series bold
[MediaStream] localstream: 
\series default
stream audio/video locale
\end_layout

\begin_layout Standard

\series bold
Eventi:
\end_layout

\begin_layout Itemize

\series bold
click button#startRecord: 
\series default
evento che richiama la funzione 
\shape italic
startRecording()
\end_layout

\begin_layout Itemize

\series bold
click button#stopRecord: 
\series default
evento che richiama la funzione 
\shape italic
stopRecording()
\end_layout

\begin_layout Itemize

\series bold
click button#sendRecord: 
\series default
evento che richiama la funzione 
\shape italic
sendRecording()
\end_layout

\begin_layout Itemize

\series bold
click li.message:
\series default
 evento che richiama la funzione 
\emph on
viewMessage(Event)
\end_layout

\begin_layout Itemize

\series bold
click button#removeRecord: 
\series default
evento che richiama la funzione 
\emph on
removeMessage()
\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] initialize():
\series default
 metodo per inizializzare l'oggetto, si occupa di inizializzare la variabile
 
\shape italic
localstream
\shape default
 e richiamare il metodo 
\emph on
render()
\end_layout

\begin_layout Itemize

\series bold
[void] render():
\series default
 metodo per effettuare la scrittura nella pagina del template RecordMessageTempl
ate
\end_layout

\begin_layout Itemize

\series bold
[void] startRecording():
\series default
 metodo per avviare la registrazione del messaggio, inizializza la variabile
 
\shape italic
localStream 
\emph on
e
\shape default
\emph default
 inoltre sostituisce il pulsante per avviare la registrazione con il pulsante
 per fermarla
\end_layout

\begin_layout Itemize

\series bold
[void] stopRecording(): 
\series default
metodo per fermare la registrazione del messaggio, sostituisce il pulsante
 per terminare la registrazione con i pulsanti per riavviarla e per inviare
 il messaggio
\end_layout

\begin_layout Itemize

\series bold
[void] sendRecordMessage():
\series default
 metodo per inviare il messaggio, invocando il metodo 
\emph on
sendRecordMessage(String
\emph default
,
\emph on
 Blob)
\emph default
 di RecordMessageCommunication e ripristinando lo stato iniziale della view
\end_layout

\begin_layout Itemize

\series bold
[void] viewMessage([Event] event): 
\series default
metodo per visualizzare il video messaggio selezionato, si occupa anche
 di aggiornare il template
\end_layout

\begin_layout Itemize

\series bold
[void] removeMessage([Event] event): 
\series default
metodo per eliminare il video messaggio selezionato, invoca il metodo 
\emph on
removeRecordMessage(RecordMessageModel) 
\emph default
della classe RecordMessageCommunication
\end_layout

\begin_layout Itemize

\series bold
[void] close():
\series default
 metodo che chiude l'istanza della classe creata
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.view.SideView
\begin_inset CommandInset label
LatexCommand label
name "sub:SideView"

\end_inset


\end_layout

\begin_layout Standard
La classe SideView definisce la struttura, e la conseguente visualizzazione,
 della pagina web che consente la visualizzazione della lista utenti iscritti
 al server.
 La classe Ã¨ composta da una lista di ContactView
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/view/pdf/SideView.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe SideView
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[DOM element] el:
\series default
 elemento DOM al quale Ã¨ legata la classe
\end_layout

\begin_layout Itemize

\series bold
[Template] template: 
\series default
riferimento al template utilizzato
\end_layout

\begin_layout Itemize

\series bold
[ContactsCollection] collection:
\series default
 riferimento alla classe ContactsCollection
\end_layout

\begin_layout Itemize

\series bold
[UserModel] myModel:
\series default
 riferimento alla classe UserModel
\end_layout

\begin_layout Itemize

\series bold
[AuthenticationView] authenticationView:
\series default
 riferimento alla classe AuthenticationView
\end_layout

\begin_layout Itemize

\series bold
[ContactView[] ] childViews: 
\series default
riferimenti alle istanze della classe ContactView
\end_layout

\begin_layout Itemize

\series bold
[FunctionsView] currentFunctions: 
\series default
riferimento alla classe FunctionsView
\end_layout

\begin_layout Standard

\series bold
Eventi:
\end_layout

\begin_layout Itemize

\series bold
click button#callIP: 
\series default
evento che richiama la funzione 
\shape italic
callIP()
\end_layout

\begin_layout Itemize

\series bold
click button#Conference: 
\series default
evento che richiama la funzione 
\shape italic
startConference()
\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] initialize():
\series default
 metodo per inizializzare l'oggetto, collega il metodo 
\emph on
render()
\emph default
 della classe alla 
\emph on
collection
\emph default
 in modo da richiamarlo ogni qual volta si aggiunga un elemento a quest'ultima.
 Predispone le funzioni 
\shape italic
acceptCall(Event)
\shape default
\emph on
 
\emph default
e 
\emph on
viewMessage(Event)
\emph default
 per gestire, rispettivamente, gli eventi 
\shape italic
acceptCall
\shape default
 e 
\emph on
viewMessage 
\emph default
inviati da NotificationView.
 Infine effettua la scrittura, nella pagina, del template SideTemplate con
 lo stato dell'utente impostato come disconnesso
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
[void] acceptCall([Event] event): 
\series default
metodo che invoca il metodo 
\shape italic
setCall(String, String) 
\emph on
avente come parametri l'username del contatto che ha iniziato la chiamata
 e
\emph default
 
\emph on
il tipo di chiamata
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
[void] getContacts([AuthenticationView] view):
\series default
 metodo che aggiorna la classe dopo l'autenticazione dell'utente, inizializzando
 
\emph on
myModel 
\emph default
e 
\emph on
authenticationView
\emph default
 e aggiornando il template con lo stato dell'utente impostato a connesso.
 Inoltre invoca il metodo 
\shape italic
fetchContacts(String)
\shape default
 della classe ContactsCommunication per popolare la lista degli utenti registrat
i al server
\end_layout

\begin_layout Itemize

\series bold
[void] render():
\series default
 metodo per visualizzare l'ultimo utente aggiunto nella collection, per
 fare ciÃ² invoca il metodo 
\emph on
viewContact(ContactModel)
\end_layout

\begin_layout Itemize

\series bold
[void] viewContact([ContactModel] contact):
\series default
 metodo per visualizzare un contatto.
 Si occupa di creare una ContactView corrispondente al contatto, di aggiungerla
 a 
\emph on
childViews
\emph default
 e di appenderla nella lista contenente tutti i contatti
\end_layout

\begin_layout Itemize

\series bold
[void] unrender():
\series default
 metodo per chiudere la view, per fare ciÃ² interrompe il collegamento tra
 la 
\emph on
collection 
\emph default
e il metodo 
\emph on
render()
\emph default
, ripristina il template originale e invoca il metodo 
\emph on
destroyContacts()
\end_layout

\begin_layout Itemize

\series bold
[void] destroyContacts():
\series default
 metodo per chiudere tutte le ContactView presenti in 
\emph on
childViews
\emph default
 e cancellare i contatti dalla 
\emph on
collection
\end_layout

\begin_layout Itemize

\series bold
[void] callIP():
\series default
 metodo per effettuare una comunicazione attraverso indirizzo IP, per fare
 ciÃ² inizialmente invoca il metodo 
\shape italic
closeOtherContacts(Strings)
\shape default
, per controllare che tutte le view presenti nel content siano state chiuse,
 e inizializza 
\emph on
currentFunctions 
\emph default
passandogli come parametro 
\emph on
From
\emph default
 il valore 
\emph on
IP
\end_layout

\begin_layout Itemize

\series bold
[void] startConference():
\series default
 metodo per effettuare una videoconferenza, , per fare ciÃ² inizialmente
 invoca il metodo 
\shape italic
closeOtherContacts(Strings)
\shape default
, per controllare che tutte le view presenti nel content siano state chiuse,
 e inizializza 
\emph on
currentFunctions 
\emph default
passandogli come parametro 
\emph on
From
\emph default
 il valore 
\emph on
Conference.
 
\emph default
Inoltre invoca il metodo 
\emph on
listContacts(ContactModel) 
\emph default
per visualizzare la lista degli utenti da selezionare per la conferenza
\end_layout

\begin_layout Itemize

\series bold
[void] listContacts([ContactModel] contact):
\series default
 metodo per gestire la lista degli utenti da selezionare per una conferenza,
 se l'utente risulta connesso si crea un ContactView corrispondente all'utente
 e si appende nella lista degli utenti da selezionare
\end_layout

\begin_layout Itemize

\series bold
[void] closeOtherContacts([String] contact):
\series default
 metodo che si occupa di chiudere le istanze di FunctionsView e UserDataView
 aperte, in modo da garantire che solo una view sia presente nel content.
 Se il metodo Ã¨ invocato da un'istanza di ContactView, viene passato come
 parametro lo username relativo al contatto
\end_layout

\begin_layout Itemize

\series bold
[void] setCall([String] contact, [String] type): 
\series default
metodo per impostare la ricezione di una chiamata, i parametri rappresentano
 lo username del chiamante e il tipo di chiamata.
 Invoca la funzione 
\shape italic
createCall(String) 
\emph on
dell'istanza, della
\emph default
 
\emph on
classe ContactView, relativa al contatto
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.view.StatisticsView
\begin_inset CommandInset label
LatexCommand label
name "sub:StatisticsView"

\end_inset


\end_layout

\begin_layout Standard
La classe StatisticsView definisce la struttura, e la conseguente visualizzazion
e, delle pagine web per la visualizzazione di statistiche riguardanti la
 chiamata
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/view/pdf/StatisticsView.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe StatisticsView
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[DOM element] el:
\series default
 elemento DOM al quale Ã¨ legata la classe
\end_layout

\begin_layout Itemize

\series bold
[Template] template: 
\series default
riferimento al template utilizzato
\end_layout

\begin_layout Itemize

\series bold
[RTCPeerConnection] peerConnection:
\series default
 flusso dati della chiamata
\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] initialize():
\series default
 metodo per inizializzare l'oggetto, inoltre richiama il metodo 
\emph on
render()
\end_layout

\begin_layout Itemize

\series bold
[void] render():
\series default
 metodo per effettuare la scrittura nella pagina del template StatisticsTemplate
 ed invoca il metodo 
\shape italic
readStatistic() 
\emph on
per visualizzare le statistiche a video
\end_layout

\begin_layout Itemize

\series bold
[void] readStatistic():
\series default
 metodo per la gestione delle statistiche delle chiamate audio/video.
 Per fare ciÃ² istanzia un listener per gli eventi di tipo 
\shape italic
setPeerConn,
\shape default
 collegandolo al metodo 
\emph on
showStatistics(Event)
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
[void] showStatistics([Event] event):
\series default
 metodo che si occupa di aggiornare, con la frequenza di un secondo, la
 durata, i byte di video e audio trasmessi, la latenza e la velocitÃ  di
 trasmissione della chiamata.
 Ricave i dati necessari dal metodo 
\emph on
getStats() 
\emph default
dell'oggetto 
\emph on
peerConnection
\emph default
 e utilizza il metodo 
\shape italic
setInterval()
\emph on
 di JavaScript per aggiornarsi
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
[void] close(): 
\series default
metodo che chiude l'istanza della classe creata 
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.view.TutorialView
\begin_inset CommandInset label
LatexCommand label
name "sub:.TutorialView"

\end_inset


\end_layout

\begin_layout Standard
La classe TutorialView definisce la struttura, e la conseguente visualizzazione,
 della parte della pagina web che consente la visualizzazione dei video
 tutorial del prodotto 
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
PROGETTO}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/view/pdf/TutorialView.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe TutorialView
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[DOM element] el:
\series default
 elemento DOM al quale Ã¨ legata la classe
\end_layout

\begin_layout Itemize

\series bold
[Template] template: 
\series default
riferimento al template utilizzato
\end_layout

\begin_layout Itemize

\series bold
[TutorialModel] currentTutorial:
\series default
 riferimento al tutorial corrente
\end_layout

\begin_layout Standard

\series bold
Eventi:
\end_layout

\begin_layout Itemize

\series bold
click li.videoTutorial: 
\series default
evento che richiama la funzione 
\shape italic
viewTutorial(String)
\end_layout

\begin_layout Itemize

\series bold
click button#next: 
\series default
evento che richiama la funzione 
\shape italic
next()
\end_layout

\begin_layout Itemize

\series bold
click button#previous: 
\series default
evento che richiama la funzione 
\shape italic
prev()
\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] initialize():
\series default
 metodo per inizializzare l'oggetto, richiama il metodo 
\emph on
getTutorials() 
\emph default
della classe TutorialCommunication e collega il metodo 
\emph on
render()
\emph default
 della classe alla 
\emph on
collection
\emph default
 in modo da richiamarlo ogni qual volta si aggiunga un elemento a quest'ultima
\end_layout

\begin_layout Itemize

\series bold
[void] render():
\series default
 metodo per effettuare la scrittura nella pagina del template TutorialTemplate,
 al fine di visualizzare la lista dei tutorials disponibili
\end_layout

\begin_layout Itemize

\series bold
[void] viewTutorial([String] tutorial):
\series default
 metodo per visualizzare il tutorial selezionato, indicato attraverso il
 parametro, per fare ciÃ² aggiorna il template.
 Inoltre assegna ad 
\emph on
currentTutorial 
\emph default
il tutorial selezionato
\end_layout

\begin_layout Itemize

\series bold
[void] next():
\series default
 metodo per passare al video successivo, si occupa anche di aggiornare 
\emph on
currentTutorial
\end_layout

\begin_layout Itemize

\series bold
[void] prev(): 
\series default
metodo per passare al video precedente, si occupa anche di aggiornare 
\emph on
currentTutorial
\end_layout

\begin_layout Itemize

\series bold
[void] close(): 
\series default
metodo che chiude l'istanza della classe creata
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.view.UserDataView
\begin_inset CommandInset label
LatexCommand label
name "sub:UserDataView"

\end_inset


\end_layout

\begin_layout Standard
La classe UserDataView definisce la struttura, e la conseguente visualizzazione,
 della parte di pagina contenente i dati dell'utente autenticato e il collegamen
to ai metodi per la modifica di tali dati
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/view/pdf/UserDataView.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe UserDataView
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[DOM element] el:
\series default
 elemento DOM al quale Ã¨ legata la classe
\end_layout

\begin_layout Itemize

\series bold
[Template] template: 
\series default
riferimento al template utilizzato
\end_layout

\begin_layout Itemize

\series bold
[UserModel] model: 
\series default
riferimento alla classe UserModel
\end_layout

\begin_layout Standard

\series bold
Eventi:
\end_layout

\begin_layout Itemize

\series bold
click button#submitChange: 
\series default
evento che richiama la funzione 
\shape italic
checkPassword()
\end_layout

\begin_layout Itemize

\series bold
click button#reset: 
\series default
evento che richiama la funzione 
\shape italic
render()
\end_layout

\begin_layout Itemize

\series bold
click button#denyChange: 
\series default
evento che richiama la funzione 
\shape italic
unrender()
\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] initialize():
\series default
 metodo per inizializzare l'oggetto, si occupa di richiamare il metodo 
\emph on
render()
\end_layout

\begin_layout Itemize

\series bold
[void] render():
\series default
 metodo per effettuare la scrittura nella pagina del template TutorialTemplate
 
\end_layout

\begin_layout Itemize

\series bold
[void] unrender():
\series default
 metodo per rimuovere la vista dei dati dell'utente, invoca il metodo 
\shape italic
close()
\end_layout

\begin_layout Itemize

\series bold
[void] checkPassword(): 
\series default
metodo che provvede a controllare la correttezza della password, per fare
 ciÃ² invoca il metodo 
\emph on
checkPassword(UserModel, String, UserDataView)
\emph default
 della classe UserDataCommunication
\end_layout

\begin_layout Itemize

\series bold
[changeData()] callBacks():
\series default
 metodo che permette ad altre classi di usufruire del metodo 
\shape italic
changeData(UserModel, 
\shape default
\emph on
UserDataView
\shape italic
\emph default
)
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
[void] changeData(
\shape italic
\emph on
[UserModel
\series default
\shape default
\emph default
] 
\series bold
user
\series default
\emph on
, 
\series bold
\emph default
[UserDataView] view):
\series default
 metodo per modificare i dati dell'utente.
 Per fare ciÃ², inizialmente, deve verificare che la nuova password, se esistente
, coincida con quella di verifica, se supera il controllo invoca il metodo
 
\shape italic
changeData(UserModel, String, String, String, UserDataView)
\shape default
 di UserDataCommunication, passandogli i dati aggiornati
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
[void] close(): 
\series default
metodo che chiude l'istanza della classe creata
\end_layout

\begin_layout Subsection
Package Communication
\begin_inset CommandInset label
LatexCommand label
name "sub:Package-Communication"

\end_inset


\end_layout

\begin_layout Standard
Nel package 
\family typewriter
mytalk.client.communication
\family default
 sono presenti le classi che effettuano la comunicazione con il server.
\end_layout

\begin_layout Paragraph
Costituito dalle classi:
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.communication.AuthenticationCommunication 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:AuthenticationCommunication"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.communication.CallCommunication 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:CallCommunication"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.communication.ChatCommunication 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:ChatCommunication"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.communication.ContactsCommunication 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:ContactsCommunication"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.communication.FileCommunication 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:FileCommunication"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.communication.NotificationCommunication 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:NotificationCommunication"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.communication.RecordMessageCommunication 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:RecordMessageCommunication"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.communication.TutorialCommunication 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:TutorialCommunication"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.communication.UserDataCommunication 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:UserDataCommunication"

\end_inset

)
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.communication.AuthenticationCommunication
\begin_inset CommandInset label
LatexCommand label
name "sub:AuthenticationCommunication"

\end_inset


\end_layout

\begin_layout Standard
La classe AuthenticationCommunication si occupa di inviare le credenziali
 inserite al server, e, inviare la risposta ricevuta a 
\family typewriter
mytalk.client.view.AuthenticationView
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/communication/pdf/AuthenticationCommunication.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe AuthenticationCommunication
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] checkCredentials([String] username,
\series default
 
\series bold
[String] password, [AuthenticationView.function()] callBacks, [AuthenticationView
] view):
\series default
 metodo che si occupa di controllare la correttezza dello username e della
 password inserite.
 Per fare ciÃ² invia al server un pacchetto, contenente username e password
 e avente come parametro aggiuntivo il tipo 
\emph on
login, 
\emph default
e attende il messaggio di risposta, anch'esso con tipo 
\emph on
login.
 
\emph default
Se il messaggio risulta positivo invoca il metodo 
\emph on
callBacks.doLogin 
\emph default
di AuthenticationView
\end_layout

\begin_layout Itemize

\series bold
[void] signup([String] username, [String] password, [String] name, [String]
 password, [AuthenticationView.function()] callBacks, [AuthenticationView]
 view): 
\series default
metodo che si occupa della registrazione dell'utente.
 Per fare ciÃ² invia al server un pacchetto contenente tutte le credenziali
 e avente tipo 
\emph on
signUp
\emph default
, e attende il messaggio di risposta contrassegnato con il tipo 
\emph on
signUp
\emph default
.
 Se il messaggio risulta positivo invoca il metodo 
\emph on
callBacks.doLogin 
\emph default
di AuthenticationView
\end_layout

\begin_layout Itemize

\series bold
[void] logout([String] username): 
\series default
metodo che gestisce la disconnessione dell'utente
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.communication.CallCommunication 
\begin_inset CommandInset label
LatexCommand label
name "sub:CallCommunication"

\end_inset


\end_layout

\begin_layout Standard
La classe CallCommunication si occuperÃ  di avviare la comunicazione tra
 utenti
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/communication/pdf/CallCommunication.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe CallCommunication
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[MediaStream] localStream:
\series default
 stream audio/video dell'utente locale
\end_layout

\begin_layout Itemize

\series bold
[MediaStream] remoteStream:
\series default
 stream audio/video dell'utente con cui si stÃ  comunicando
\end_layout

\begin_layout Itemize

\series bold
[RTCPeerConnection] peerConnection:
\series default
 canale attraverso cui scorre il flusso della chiamata tra due utenti
\end_layout

\begin_layout Itemize

\series bold
[ContactModel] recipent:
\series default
 riferimento alla classe ContactModel riguardante l'utente con cui si stÃ 
 comunicando
\end_layout

\begin_layout Itemize

\series bold
[HTMLVideoElement] remotevid:
\series default
 elemento HTMLVideoElement dell'utente con cui si stÃ  comunicando
\end_layout

\begin_layout Itemize

\series bold
[HTMLVideoElement] sourcevid: 
\series default
elemento HTMLVideoElement dell'utente locale
\end_layout

\begin_layout Itemize

\series bold
[boolean] readyToSend:
\series default
 variabile booleana che indica se Ã¨ possibile o meno l'invio di 
\shape italic
candidates
\end_layout

\begin_layout Itemize

\series bold
[boolean] messageReceived:
\series default
 variabile booleana che indica se l'utente con cui si vuole comunicare Ã¨
 pronto ad accettare 
\shape italic
candidates
\shape default
 o meno
\end_layout

\begin_layout Itemize

\series bold
[String[]] candidates:
\series default
 array associativo contenente gli ICE candidates, 
\shape italic
recipient
\shape default
 e il tipo di messaggio da inviare al server
\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] sendCall([String] tyecall, [ContactModel] contact, [CallView] view):
\series default
 metodo per inizializzare la chiamata, deve avere come parametri il tipo
 d chiamata, l'istanza della classe ContactModel relativa al contatto e
 una riferimento a CallView.
 Lancia l'evento 
\shape italic
setOnCall,
\shape default
 che NotificationCommunication raccoglie per impostare la variabile 
\emph on
onCalling
\emph default
 a 
\emph on
true
\emph default
, e invia al server un package di tipo 
\emph on
call 
\emph default
contenente il tipo di chiamata e il contatto che si vuole chiamare.
 Infine inizializza il listener che si occuperÃ  di attendere la risposta
 del chiamato e invocare 
\shape italic
onAnswer(Event)
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
[void] onAnswer([Event] event):
\series default
 metodo che gestisce la risposta inviata dall'utente che si vuole chiamare,
 identificato dal tipo 
\emph on
answeredCall
\emph default
; se la risposta risulta affermativa invoca il metodo 
\shape italic
startCall(boolean, String, CallCommunication, CallView)
\shape default
, avente come parametri se l'utente Ã¨ il chiamante, quindi in questo caso
 viene inviato true, il tipo di chiamata e i riferimenti alle due classi,
 altrimenti lancia l'evento 
\shape italic
setOnCall,
\shape default
 che NotificationCommunication raccoglie per impostare la variabile 
\emph on
onCalling
\emph default
 a 
\emph on
false
\emph default
, e comunica all'utente il motivo della non inizializzazione della chiamata
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
[void] sendAnswer([String] tyecall, [ContactModel] contact, [CallView] view):
 
\series default
metodo per inviare all'utente che ha effettuato la chiamata una risposta
 positiva e per invocare il metodo 
\shape italic
startCall(boolean,String, CallCommunication, CallView)
\shape default
, avente come parametri se l'utente Ã¨ il chiamante, quindi in questo caso
 viene inviato false, il tipo di chiamata e i riferimenti alle due classi
\end_layout

\begin_layout Itemize

\series bold
[void] createPeerConnection(): 
\series default
metodo per inizializzare 
\shape italic
peerConnection
\shape default
 e aggiungere gli ascoltatori per l'aggiunta e la rimozione dello stream
 remoto 
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
[void] onRemoteStreamAdded([Event] event):
\series default
 metodo per impostare 
\shape italic
remoteStream
\shape default
 allo stream remoto e mandare l'evento 
\shape italic
setPeerConn
\shape default
 che viene raccolto e gestito dalla classe StatisticsView
\end_layout

\begin_layout Itemize

\series bold
[void] onRemoteStreamRemoved([Event] event):
\series default
 metodo per rimuovere 
\shape italic
localStream
\shape default
 da 
\shape italic
peerConnection
\shape default
 ( ancora non supportato da WebRTC)
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
[void] connect([boolean] started):
\series default
 metodo per inizializzare una RTCPeerConnection invocando il metodo 
\shape italic
createPeerConnection()
\shape default
, aggiungendo a 
\shape italic
peerConnection
\shape default
 il proprio 
\shape italic
localStream
\shape default
 e invocando il metodo 
\shape italic
createOffer(RTCSessionDescriptionCallback)
\shape default
 di RTCPeerConnection
\end_layout

\begin_layout Itemize

\series bold
[void] gotDescription(
\shape italic
\emph on
[RTCSessionDescription
\shape default
\emph default
] description): 
\series default
metodo per impostare il proprio sdp tramite il metodo 
\shape italic
setLocalDescription(RTCSessionDescription)
\shape default
 di RTCPeerConnection ed inviarlo all'utente con cui si vuole comunicare
 
\end_layout

\begin_layout Itemize

\series bold
[void] onIceCandidate([Event] event): 
\series default
metodo per generare i candidati e memorizzarli in 
\shape italic
candidates
\shape default
 e, una volta salvati tutti, inviarli all'utente remoto se Ã¨ pronto a riceverli,
 altrimenti invia al server un messaggio che indica la disponibilitÃ  a ricevere
 candidati
\end_layout

\begin_layout Itemize

\series bold
[void] startCall([boolean] isCaller, [String] typecall, [CallCommunication]
 call, [CallView] view): 
\series default
metodo per avviare la comunicazione tra due utenti.
 Imposta 
\shape italic
sourcevid
\shape default
 e 
\shape italic
remotevid
\shape default
, inizializza il listener 
\shape italic
onMessage(Event)
\shape default
 e nel caso l'utente sia il chiamante imposta lo stream audio o audio/video
 e invoca il metodo 
\shape italic
connect(boolean)
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
[void] onMessage([Event] event):
\series default
 metodo per gestire messaggi dal server, in base al pacchetto ricevuto effettua
 una determinata serie di azioni:
\end_layout

\begin_deeper
\begin_layout Itemize
se il pacchetto contiene come tipo 
\emph on
offer
\emph default
, ed Ã¨ inviato dal chiamante, imposta 
\shape italic
localStream
\shape default
, inizializza 
\shape italic
peerConnection
\shape default
 ed imposta il 
\shape italic
\emph on
RTCSessionDescription
\shape default
\emph default
 ricevuto e invia il proprio
\shape italic
\emph on
 RTCSessionDescription
\end_layout

\begin_layout Itemize
se il pacchetto Ã¨ di tipo 
\emph on
answer
\emph default
, ed Ã¨ inviato dal chiamato, imposta in 
\shape italic
peerConnection
\shape default
 il 
\shape italic
\emph on
RTCSessionDescription
\shape default
\emph default
 ricevuto
\end_layout

\begin_layout Itemize
se il pacchetto contiene il tipo 
\emph on
candidateready
\emph default
 imposta a 
\emph on
true
\emph default
 
\shape italic
messageReceived
\shape default
 e nel caso in cui 
\shape italic
readyToSend
\shape default
 sia 
\emph on
true
\emph default
 invia 
\shape italic
candidates
\end_layout

\begin_layout Itemize
se il pacchetto contiene il tipo 
\emph on
candidate
\emph default
 preleva il RTCIceCandidate e imposta in 
\shape italic
peerConnection
\end_layout

\begin_layout Itemize
se il pacchetto contiene il tipo 
\emph on
endcall
\emph default
 interrompe 
\shape italic
localStream
\shape default
, chiude 
\shape italic
peerConnection
\shape default
 e lancia l'evento 
\shape italic
setOnCall,
\shape default
 che NotificationCommunication raccoglie per impostare la variabile 
\emph on
onCalling
\emph default
 a 
\emph on
false
\emph default
, e invoca il metodo 
\emph on
endCall(bool)
\emph default
 di CallView
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize

\series bold
[void] recoverCall():
\series default
 metodo per ripristinare la visione dello stream nel caso in cui fosse stata
 interrotta selezionando un altro utente
\end_layout

\begin_layout Itemize

\series bold
[void] endCall():
\series default
 metodo che interrompe 
\shape italic
localStream
\shape default
, chiude 
\shape italic
peerConnection
\shape default
 e lancia l'evento 
\shape italic
setOnCall,
\shape default
 che NotificationCommunication raccoglie per impostare la variabile 
\emph on
onCalling
\emph default
 a 
\emph on
false, 
\emph default
infine invia al server un pacchetto, contrassegnato dal tipo 
\emph on
endcall
\emph default
 contenente lo username del contatto con cui si era in chiamata
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.communication.ChatCommunication
\begin_inset CommandInset label
LatexCommand label
name "sub:ChatCommunication"

\end_inset


\end_layout

\begin_layout Standard
La classe ChatCommunication si occupa di comunicare con il server per quanto
 riguarda il trasferimento e la gestione di messaggi testuali
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/communication/pdf/ChatCommunication.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe ChatCommunication
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] send([String] username, [String] message):
\series default
 metodo che si occupa di inviare un pacchetto al server, contrassegnato
 con il tipo 
\emph on
sendText
\emph default
 contenente il contatto con cui si sta comunicando via chat e il messaggio
 che si vuole inviare
\end_layout

\begin_layout Itemize

\series bold
[void] onReceived([Event] event):
\series default
 metodo di tipo listener per la ricezione e la gestione di segnali riguardanti
 i messaggi testuali; se il segnale significa l'arrivo di un nuovo messaggio,
 Ã¨ quindi caratterizzati dal tipo 
\emph on
sendText,
\emph default
 lo aggiunge alla collezione di tipo TextMessagesCollection, mentre se indica
 errori nella consegna del testo, tipo 
\emph on
notDelivered
\emph default
, avvisa l'utente e imposta lo stato del messaggio, presente nella collection,
 come 
\emph on
notsent
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.communication.ContactsCommunication 
\begin_inset CommandInset label
LatexCommand label
name "sub:ContactsCommunication"

\end_inset


\end_layout

\begin_layout Standard
La classe ContactsCommunication si occupa di prelevare la lista degli utenti
 presenti nel server e di aggiornarla nel caso di cambiamenti
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/communication/pdf/ContactsCommunication.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe ContactsCommunication
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] fetchContacts([String] username):
\series default
 metodo per prelevare dal server la lista dei contatti registrati, per fare
 ciÃ² invia al server un pacchetto di tipo 
\emph on
getContacts
\emph default
 contenente lo username dell'utente ed attende la risposta, che consiste
 in un pacchetto, contrassegnato con lo stesso tipo, contenente il numero
 di contatti e la lista con i loro dati.
 Per ogni contatto controlla che esso non sia giÃ  presente nella lista utenti,
 se affermativo aggiunge il contatto nella collection, altrimenti aggiorna
 l'attributo 
\emph on
IP
\emph default
 del 
\emph on
ContactUser
\emph default
 corrispondente
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.communication.FileCommunication
\begin_inset CommandInset label
LatexCommand label
name "sub:FileCommunication"

\end_inset


\end_layout

\begin_layout Standard
La classe FileCommunication si occupa di gestire l'invio di file ad un altro
 utente e la ricezione
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/communication/pdf/FileCommunication.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe FileCommunication
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] sendFile([String] username, [File] file):
\series default
 metodo per inviare un file salvato in locale, invia al server un pacchetto,
 caratterizzato dal tipo 
\emph on
file, 
\emph default
contenente il file e lo username del destinatario
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.communication.NotificationCommunication
\begin_inset CommandInset label
LatexCommand label
name "sub:NotificationCommunication"

\end_inset


\end_layout

\begin_layout Standard
La classe NotificationCommunication si occupa di comunicare con il server
 per quanto riguarda le notifiche
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/communication/pdf/NotificationCommunication.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe NotificationCommunication
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[boolean] onCalling:
\series default
 variabile che indica se l'utente ha una chiamata in corso
\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] listenNotification():
\series default
 metodo di tipo listener per gestire gli eventi di tipo 
\emph on
setOnCall
\emph default
 e 
\emph on
message, 
\emph default
in arrivo
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
[void] SetOnCall([Event] event) 
\series default
imposta 
\emph on
onCalling 
\emph default
a seconda del tipo racchiuso nel parametro passatogli
\end_layout

\begin_layout Itemize

\series bold
[void] onNotification([String] str):
\series default
 metodo per gestire le notifiche in ingresso, che potranno essere chiamate,
 messaggi video o file.
\end_layout

\begin_deeper
\begin_layout Itemize
Se si tratta di una chiamata in arrivo, quindi il pacchetto risulta contrassegna
to dal tipo 
\emph on
call
\emph default
, se l'utente non risulta occupato in altre conversazioni viene creata una
 istanza NotificationView e impostato il timeout, in modo da terminare la
 chiamata nel caso non si risponda dopo un determinato intervallo di tempo.
 Se l'utente risulta invece giÃ  in chiamata, si manda un messaggio al server,
 di tipo 
\emph on
busy
\emph default
 per avvisare il chiamante 
\end_layout

\begin_layout Itemize
Se si tratta della terminazione di una chiamata, quindi il pacchetto risulta
 contrassegnato dal tipo 
\emph on
endcall
\emph default
, si assegna 
\emph on
false
\emph default
 alla variabile onCalling
\end_layout

\begin_layout Itemize
Se si tratta di un file in arrivo, pacchetto contrassegnato dal tipo 
\emph on
file
\emph default
, verrÃ  creata e avviata una istanza di NotificationView con i relativi
 dati
\end_layout

\begin_layout Itemize
Se si tratta di un messaggio video in arrivo, pacchetto contrassegnato dal
 tipo 
\emph on
record, 
\emph default
viene creato ed aggiunto il messaggio alla collection, successivamente viene
 creata e avviata una istanza di NotificationView con i relativi dati
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize

\series bold
[void] refuseCall([String] username): 
\series default
metodo per rispondere ad una richiesta di chiamata con un rifiuto, inviando
 un pacchetto con tipo 
\emph on
refuseCall
\emph default
, contenente lo username del chiamante, allo strato transfer
\end_layout

\begin_layout Itemize

\series bold
[void] refuseFile([String] username):
\series default
 metodo per rifiutare la ricezione di un file, invia un pacchetto con tipo
 
\emph on
refuse
\emph default
File, contenente lo username del mittente, allo strato transfer
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.communication.RecordMessageCommunication
\begin_inset CommandInset label
LatexCommand label
name "sub:RecordMessageCommunication"

\end_inset


\end_layout

\begin_layout Standard
La classe RecordMessageCommunication si occupa di registrare, inviare e
 ricevere i messaggi registrati
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/communication/pdf/RecordMessageCommunication.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe RecordMessageCommunication
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] sendRecordMessage([String] username, [Blob] message): 
\series default
metodo per inviare un messaggio video/audio, per fare ciÃ² invia al server
 un pacchetto con tipo 
\emph on
sendRecord 
\emph default
e contenente il nome del destinatario e il file audio/video
\end_layout

\begin_layout Itemize

\series bold
[void] removeRecordMessage([RecordMessageModel] message): 
\series default
metodo per eliminare un messaggio video/audio, invia al server la richiesta,
 con tipo 
\emph on
removeRecord, 
\emph default
ed elimina il messaggio dalla collection
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.communication.TutorialCommunication 
\begin_inset CommandInset label
LatexCommand label
name "sub:TutorialCommunication"

\end_inset


\end_layout

\begin_layout Standard
La classe TutorialCommunication si occupa di comunicare con il server per
 il prelievo dei tutorial video
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/communication/pdf/TutorialCommunication.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe TutorialCommunication
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] getTutorials():
\series default
 metodo per prelevare dal server la lista dei tutorial registrati, rappresenta
 un listener che riceverÃ  un pacchetto, contrassegnato dal tipo 
\emph on
tutorials
\emph default
, contenente la lista dei tutorial, infine aggiunge ciascuno di questi nella
 collection
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.communication.UserDataCommunication
\begin_inset CommandInset label
LatexCommand label
name "sub:UserDataCommunication"

\end_inset


\end_layout

\begin_layout Standard
La classe UserDataCommunication si occupa di comunicare con il server per
 la modifica dei dati dell'utente
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/communication/pdf/UserDataCommunication.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe UserDataCommunication
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[void] checkPassword([UserModel] model, [String] password, [UserDataView]
 view):
\series default
 metodo per controllare che la password di verifica inserita dall'utente
 corrisponda a quella salvata nella base di dati.
 Per fare ciÃ² invia al server un pacchetto, contrassegnato dal tipo 
\emph on
checkCredentials
\emph default
 e contenente lo username dell'utente e la password inserita, se il pacchetto
 di risposta, contrassegnato dallo stesso tipo, Ã¨ affermativo viene invocato
 il metodo 
\shape italic
view.callBacks.changeData(UserModel, UserDataView)
\shape default
, altrimenti mostra un messaggio di errore
\end_layout

\begin_layout Itemize

\series bold
[void] changeData([UserModel] model, [String] name, [String] surname, [String]
 password, [UserDataView] view):
\series default
 metodo che invia i dati aggiornati al server, racchiudendoli in un pacchetto
 di tipo 
\emph on
changeData
\emph default
 ed attende la risposta.
 Se il pacchetto di risposta, contrassegnato dallo stesso tipo, Ã¨ affermativo
 si aggiorneranno i dati del model e si chiama il metodo 
\shape italic
render()
\shape default
 di UserDataView, altrimenti viene mostrato un messaggio di errore
\end_layout

\begin_layout Subsection
Package Collection
\begin_inset CommandInset label
LatexCommand label
name "sub:Package-Collection"

\end_inset


\end_layout

\begin_layout Standard
Nel package 
\family typewriter
mytalk.client.collection
\family default
 sono presenti le classi che conterranno le liste di oggetti di tipo Model.
 Non Ã¨ presente una classe del package Collection per ogni classe del package
 Model 
\end_layout

\begin_layout Paragraph
Costituito dalle classi:
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.collection.ContactsCollection
\family default
 (vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub: ContactsCollection"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.collection.RecordMessagesCollection 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub: RecordMessagesCollection"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.collection.TextMessagesCollection 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub: TextMessagesCollection"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.collection.TutorialsCollection 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:TutorialsCollection"

\end_inset

)
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.collection.ContactsCollection 
\begin_inset CommandInset label
LatexCommand label
name "sub: ContactsCollection"

\end_inset


\end_layout

\begin_layout Standard
La classe ContactsCollection rappresenta la collezione dei contatti registrati
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/collection/pdf/ContactsCollection.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe ContactsCollection
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[ContactModel] model: 
\series default
riferimento alla classe ContactModel
\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[ContactModel[]] record(): 
\series default
metodo per restituire un array contenente tutti i ContactModel della collezione
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.collection.RecordMessagesCollection 
\begin_inset CommandInset label
LatexCommand label
name "sub: RecordMessagesCollection"

\end_inset


\end_layout

\begin_layout Standard
La classe RecordMessagesCollection rappresenta la collezione dei messaggi
 audio e video ricevuti 
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/collection/pdf/RecordMessagesCollection.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe RecordMessagesCollection
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[RecordMessageModel] model:
\series default
 riferimento alla classe RecordMessageModel
\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[RecordMessageModel[]] getMessages([String] username): 
\series default
metodo per restituire un array contenente i RecordMessageModel della collezione,
 avente come mittente lo username passato per parametro
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.collection.TextMessagesCollection 
\begin_inset CommandInset label
LatexCommand label
name "sub: TextMessagesCollection"

\end_inset


\end_layout

\begin_layout Standard
La classe TextMessagesCollection rappresenta la collezione dei messaggi
 di testo di una singola conversazione
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/collection/pdf/TextMessagesCollection.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe TextMessagesCollection
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[TextMessageModel] model: 
\series default
riferimento alla classe TextMessageModel
\end_layout

\begin_layout Paragraph
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[TextMessagesCollection] chatSession([String] username): 
\series default
metodo per restituire l'intera conversazione con l'utente il cui username
 Ã¨ parametro della funzione
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.collection.TutorialsCollection 
\begin_inset CommandInset label
LatexCommand label
name "sub:TutorialsCollection"

\end_inset


\end_layout

\begin_layout Standard
La classe TutorialsCollection rappresenta la collezione dei tutorial video
 disponibili all'utente
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/collection/pdf/TutorialsCollection.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe TutorialsCollection
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[TutorialModel] model: 
\series default
riferimento alla classe TutorialModel
\end_layout

\begin_layout Subsection
Package Model
\begin_inset CommandInset label
LatexCommand label
name "sub:Package-Model"

\end_inset


\end_layout

\begin_layout Standard
Il package 
\family typewriter
mytalk.client.model
\family default
 costituisce la parte del sistema dedita alla permanenza ed alla gestione
 dei dati 
\end_layout

\begin_layout Paragraph
Costituito dalle classi:
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.model.ContactModel 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:ContactModel"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.model.RecordMessageModel
\family default
 (vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:RecordMessageModel "

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.model.TextMessageModel
\family default
 (vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:TextMessageModel"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.model.TutorialModel 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:TutorialModel"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.model.UserModel 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:UserModel"

\end_inset

)
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.model.ContactModel 
\begin_inset CommandInset label
LatexCommand label
name "sub:ContactModel"

\end_inset


\end_layout

\begin_layout Standard
La classe ContactModel rappresenta un singolo contatto registrato
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/model/pdf/ContactModel.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe ContactModel
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[String] username
\series default
: username del contatto
\end_layout

\begin_layout Itemize

\series bold
[String] name
\series default
: nome del contatto
\end_layout

\begin_layout Itemize

\series bold
[String] surname
\series default
: cognome del contatto
\end_layout

\begin_layout Itemize

\series bold
[String] IP
\series default
: indirizzo IP del contatto
\end_layout

\begin_layout Itemize

\series bold
[int] unread: 
\series default
numero di messaggi non ancora letti, inviati dal contatto
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.model.RecordMessageModel
\begin_inset CommandInset label
LatexCommand label
name "sub:RecordMessageModel "

\end_inset


\end_layout

\begin_layout Standard
La classe RecordMessageModel rappresenta un messaggio video/audio inviato
 all'utente
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/model/pdf/RecordMessageModel.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe RecordMessageModel
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[String] contact: 
\series default
mittente del messaggio
\end_layout

\begin_layout Itemize

\series bold
[String]
\begin_inset space \space{}
\end_inset

record: 
\series default
indirizzo url del server in cui Ã¨ salvato il messaggio
\end_layout

\begin_layout Itemize

\series bold
[String] date: 
\series default
data di creazione del messaggio
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.model.TextMessageModel
\begin_inset CommandInset label
LatexCommand label
name "sub:TextMessageModel"

\end_inset


\end_layout

\begin_layout Standard
La classe TextMessageModel rappresenta un messaggio testuale inviato tra
 due utenti
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/model/pdf/TextMessageModel.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe TextMessageModel
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[String] contact: 
\series default
mittente del messaggio testuale
\end_layout

\begin_layout Itemize

\series bold
[String] message: 
\series default
contenuto del messaggio testuale
\end_layout

\begin_layout Itemize

\series bold
[String] source: 
\series default
stato del messaggio
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
sent
\emph default
 : se il messaggio Ã¨ stato inviato al contatto (e 
\emph on
notsent
\emph default
: se ci sono stati problemi nella consegna)
\end_layout

\begin_layout Itemize

\emph on
received:
\emph default
 se il messaggio Ã¨ stato inviato dal contatto
\end_layout

\end_deeper
\begin_layout Subsubsection

\family typewriter
mytalk.client.model.TutorialModel
\begin_inset CommandInset label
LatexCommand label
name "sub:TutorialModel"

\end_inset


\end_layout

\begin_layout Standard
La classe TutorialModel rappresenta il collegamento ad un video tutorial
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/model/pdf/TutorialModel.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe TutorialModel
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[String]
\begin_inset space \space{}
\end_inset

title: 
\series default
titolo del tutorial
\end_layout

\begin_layout Itemize

\series bold
[String] url: 
\series default
indirizzo url del server in cui Ã¨ salvato il tutorial
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.model.UserModel
\begin_inset CommandInset label
LatexCommand label
name "sub:UserModel"

\end_inset


\end_layout

\begin_layout Standard
La classe UserModel rappresenta i dati dell'utente attivo.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/client/model/pdf/UserModel.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Classe UserModel
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Attributi pubblici:
\end_layout

\begin_layout Itemize

\series bold
[String] username
\series default
: username dell' utente
\end_layout

\begin_layout Itemize

\series bold
[String] password: 
\series default
password dell'utente
\end_layout

\begin_layout Itemize

\series bold
[String] name
\series default
: nome dell' utente
\end_layout

\begin_layout Itemize

\series bold
[String] surname
\series default
: cognome dell' utente
\end_layout

\begin_layout Subsection
template
\end_layout

\begin_layout Standard

\family typewriter
mytalk.client.template
\family default
 costituisce la parte del sistema che definisce ed implementa l'interfaccia
 web usufruibile dagli utenti mediante pagine web, visualizzata in base
 alle esigenze.
 Viene utilizzato il sistema di template fornito da Underscore.js, libreria
 necessaria per il funzionamento di Backbone.js
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.client.template.AuthenticationTemplate 
\end_layout

\begin_layout Standard
Questo template crea gli elementi dell'interfaccia grafica necessari per
 effettuare le operazioni di 
\emph on
login
\emph default
 e registrazione e, una volta connessi, per accedere alla sezione di modifica
 dati ed effettuare il 
\emph on
logout
\end_layout

\begin_layout Standard

\series bold
Il template Ã¨ utilizzato da: 
\family typewriter
\series default
mytalk.client.view.AuthenticationView
\end_layout

\begin_layout Standard

\series bold
Visualizzazione della pagina:
\end_layout

\begin_layout Itemize

\series bold
Utente non autenticato:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
input#user:
\series default
 input con tipo text ed id user, in cui l'utente deve inserire il proprio
 username per effettuare l'accesso
\end_layout

\begin_layout Itemize

\series bold
input#password: 
\series default
input con tipo password ed id password, in cui l'utente deve inserire la
 propria password per effettuare l'accesso
\end_layout

\begin_layout Itemize

\series bold
button#login: 
\series default
pulsante con id login per effettuare il 
\emph on
login 
\emph default
tramite il metodo connect() della classe AuthenticationView
\end_layout

\begin_layout Itemize

\series bold
button#signup: 
\series default
pulsante con id signup per visualizzare il modulo di registrazione
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Registrazione:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
input#user:
\series default
 input con tipo text ed id user, in cui l'utente deve inserire lo username
 desiderato per effettuare la registrazione 
\end_layout

\begin_layout Itemize

\series bold
input#password: 
\series default
input con tipo password ed id password, in cui l'utente deve inserire la
 password desiderata per effettuare la registrazione
\end_layout

\begin_layout Itemize

\series bold
input#password2: 
\series default
input con tipo password ed id password2, in cui l'utente deve inserire nuovament
e la propria password per controllare che non ci siano errori in quella
 inserita precedentemente 
\end_layout

\begin_layout Itemize

\series bold
input#name: 
\series default
input con tipo text ed id name, in cui l'utente puÃ² inserire il proprio
 nome
\end_layout

\begin_layout Itemize

\series bold
input#surname: 
\series default
input con tipo text ed id surname, in cui l'utente puÃ² inserire il proprio
 cognome
\end_layout

\begin_layout Itemize

\series bold
button#sign: 
\series default
pulsante con id sign per effettuare la registrazione invocando il metodo signUp() di AuthenticationView
\end_layout

\begin_layout Itemize

\series bold
button#deny: 
\series default
pulsante con id deny per annullare la registrazione e chiudere il modulo
 di registrazione invocando il metodo deny() di AuthenticationView
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Utente autenticato:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
button#logout: 
\series default
pulsante con id logout per effettuare il 
\emph on
logout
\emph default
invocando il metodo disconnect() di AuthenticationView
\end_layout

\begin_layout Itemize

\series bold
button#edit: 
\series default
pulsante con id edit per accedere alla sezione di modifica dei propri dati,
 ovvero a
\family typewriter
mytalk.client.template.UserDataTemplate
\end_layout

\end_deeper
\begin_layout Subsubsection

\family typewriter
mytalk.client.template.CallTemplate 
\end_layout

\begin_layout Standard
Questo template crea gli elementi dell'interfaccia grafica che l'utente
 vede durante una chiamata.
\end_layout

\begin_layout Itemize

\series bold
Il template Ã¨ utilizzato da: 
\series default
\family typewriter
myTalk.client.view.CallView
\end_layout

\begin_layout Itemize

\series bold
Chiamata avviata:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
video#remotevid: 
\series default
video con tipologia autoplay ed id remotevid, corrisponde al video dell'
 utente con cui si sta dialogando
\end_layout

\begin_layout Itemize

\series bold
video#sourcevid:
\series default
 video con tipologia autoplay ed id sourcevid, corrisponde al video locale
 
\end_layout

\begin_layout Itemize

\series bold
button#endCall: 
\series default
pulsante con id endCall che termina la chiamata invocando il metodo endCall() di CallView
\end_layout

\end_deeper
\begin_layout Subsubsection

\family typewriter
mytalk.client.template.ChatTemplate 
\end_layout

\begin_layout Standard
Questo template crea gli elementi dell'interfaccia grafica che l'utente
 visualizza quando la chat Ã¨ attiva.
\end_layout

\begin_layout Itemize

\series bold
Il template Ã¨ utilizzato da: 
\family typewriter
\series default
myTalk.client.view.ChatView
\end_layout

\begin_layout Itemize

\series bold
Chat attivata:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
textarea#compose: 
\series default
area testuale di input con id compose per la scrittura dei messaggi testuali
\end_layout

\begin_layout Itemize

\series bold
button#Send: 
\series default
pulsante con id Send per inviare il messaggio tramite il metodo send() di ChatView
\end_layout

\end_deeper
\begin_layout Subsubsection

\family typewriter
mytalk.client.template.ContactTemplate
\end_layout

\begin_layout Standard
Questo template crea gli elementi dell'interfaccia grafica tramite cui l'utente
 visualizza gli username dei contatti e se tali contatti siano online od
 offline, e gli elementi per selezionare un contatto da contattare tramite
 videoconferenza 
\end_layout

\begin_layout Itemize

\series bold
Il template Ã¨ utilizzato da:
\series default
 
\family typewriter
myTalk.client.view.ContactView
\end_layout

\begin_layout Itemize

\series bold
Utente autenticato: 
\end_layout

\begin_deeper
\begin_layout Itemize
viene verificato l'indirizzo ip per ogni utente registrato al server e,
 se un utente Ã¨ connesso viene mostrato 
\begin_inset Quotes eld
\end_inset

online
\begin_inset Quotes erd
\end_inset

, altrimenti 
\begin_inset Quotes eld
\end_inset

offline
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Richiesta di video conferenza:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
input#username: 
\series default
input con tipo checkbox ed id username, con cui l'utente seleziona i partecipant
i alla video conferenza
\end_layout

\end_deeper
\begin_layout Subsubsection

\family typewriter
mytalk.client.template.FunctionsTemplate
\end_layout

\begin_layout Standard
Questo template crea gli elementi dell'interfaccia grafica necessari per
 effettuare le operazioni che si possono compiere  dopo aver selezionato
 un utente tramite ip o dalla lista dei contatti.
\end_layout

\begin_layout Itemize

\series bold
Il template Ã¨ utilizzato da:
\family typewriter
\series default
 myTalk.client.view.FunctionsView
\end_layout

\begin_layout Itemize

\series bold
Contatto tramite l'inserimento dell'indirizzo IP: 
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
input#ip:
\series default
 input con tipo text ed id ip, in cui l'utente deve inserire l'indirizzo
 ip dell' utente che vuole contattare
\end_layout

\begin_layout Itemize

\series bold
button#StartChat: 
\series default
pulsante con id StartChat che avvia la chat creando una nuova ChatView
\end_layout

\begin_layout Itemize

\series bold
button#call: 
\series default
pulsante con id call che avvia la chiamata tramite il metodo audiocall() di FunctionsView
\end_layout

\begin_layout Itemize

\series bold
button#video: 
\series default
pulsante con id video che avvia la video chiamata tramite il metodo videocall() di FunctionsView
\end_layout

\begin_layout Itemize

\series bold
input#record: 
\series default
input con tipo checkbox e id record per registrare la chiamata invocando
 il metodo record() di FunctionsView
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Utente offline:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
button#dataContact: 
\series default
pulsante con id dataContact che mostra i dettagli del contatto tramite il
 metodo viewDataContact() di FunctionsView
\end_layout

\begin_layout Itemize

\series bold
button#sendVideoText:
\series default
pulsante con id sendVideoText che mostra le opzioni per registrare un video
 messaggio
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Utente online:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
button#call: 
\series default
pulsante con id call che avvia la chiamata tramite il metodo audiocall() di FunctionsView
\end_layout

\begin_layout Itemize

\series bold
button#video: 
\series default
pulsante con id video che avvia la video chiamata tramite il metodo videocall() di FunctionsView
\end_layout

\begin_layout Itemize

\series bold
input#record: 
\series default
input con tipo checkbox e id record per registrare la chiamata invocando
 il metodo record() di FunctionsView
\end_layout

\end_deeper
\begin_layout Subsubsection

\family typewriter
mytalk.client.template.NotificationTemplate
\end_layout

\begin_layout Standard
Questo template crea gli elementi dell'interfaccia grafica necessari per
 accettare o rifiutare una chiamata
\end_layout

\begin_layout Itemize

\series bold
Il template Ã¨ utilizzato da:
\series default
 
\family typewriter
myTalk.client.view.NotificationView
\end_layout

\begin_layout Itemize

\series bold
Notifica della ricezione di una chiamata:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
button#acceptCall: 
\series default
pulsante con id acceptCall che accetta la chiamata invocando il metodo acceptCall() di NotificationView
\end_layout

\begin_layout Itemize

\series bold
button#refuseCall: 
\series default
pulsante con id refuseCall che rifiuta la chiamata invocando il metodo refuseCall() di NotificationView
\end_layout

\end_deeper
\begin_layout Subsubsection

\family typewriter
mytalk.client.template.RecordMessageTemplate
\end_layout

\begin_layout Standard
Questo template crea gli elementi dell'interfaccia grafica necessari per
 registrare un video messaggio
\end_layout

\begin_layout Itemize

\series bold
Il template Ã¨ utilizzato da:
\series default
 
\family typewriter
myTalk.client.view.RecordMessageView
\end_layout

\begin_layout Itemize

\series bold
Registra un video messaggio:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
video#live_video:
\series default
 video con tipologia autoplay controls ed id live_video, affinchÃ© l'utente
 possa interrompere la registrazione quando lo desidera
\end_layout

\end_deeper
\begin_layout Subsubsection

\family typewriter
mytalk.client.template.SideTemplate
\end_layout

\begin_layout Standard
Questo template crea gli elementi dell'interfaccia grafica necessari per
 la visualizzazione della sidebar
\end_layout

\begin_layout Itemize

\series bold
Il template Ã¨ utilizzato da:
\series default
\family typewriter
 myTalk.client.view.SideView
\end_layout

\begin_layout Itemize

\series bold
Sidebar:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
button#callIP:
\series default
 pulsante con id callIP che permette di contattare una persona tramite l'indiriz
zo IP invocando il metodo callIP() di SideView
\end_layout

\begin_layout Itemize

\series bold
ul#contacts:
\series default
 lista con id contacts, rappresenta gli utenti registrati presso il server,
 ciascuno di essi viene mostrato tramite ContactTemplate
\end_layout

\begin_layout Itemize

\series bold
button#conference: 
\series default
pulsante con id conference che permette all'utente di selezionare i partecipanti
 alla conferenza
\end_layout

\end_deeper
\begin_layout Subsubsection

\family typewriter
mytalk.client.template.StatisticsTemplate
\end_layout

\begin_layout Standard
Questo template crea gli elementi dell'interfaccia grafica riguardanti le
 statistiche che l'utente visualizza durante una chiamata
\end_layout

\begin_layout Itemize

\series bold
Il template Ã¨ utilizzato da:
\series default
 
\family typewriter
myTalk.client.view.StatisticsView
\end_layout

\begin_layout Itemize

\series bold
Statistiche:
\end_layout

\begin_deeper
\begin_layout Itemize
Durata della chiamata: durata della chiamata mostrata in formato ore:minuti:seco
ndi
\end_layout

\begin_layout Itemize
Byte audio trasmessi: KB trasmessi dall'avvio della chiamata solo audio
\end_layout

\begin_layout Itemize
Byte video trasmessi: KB trasmessi dall'avvio della video chiamata
\end_layout

\begin_layout Itemize
Latenza: tempo di latenza in ms
\end_layout

\begin_layout Itemize
VelocitÃ  di trasmissione: KB/s trasmessi
\end_layout

\end_deeper
\begin_layout Subsubsection

\family typewriter
mytalk.client.template.UserDataTemplate
\end_layout

\begin_layout Standard
Questo template crea gli elementi dell'interfaccia grafica necessari per
 la modifica dei propri dati salvati nella base di dati
\end_layout

\begin_layout Itemize

\series bold
Il template Ã¨ utilizzato da:
\series default
 
\family typewriter
myTalk.client.view.UserDataView
\end_layout

\begin_layout Itemize

\series bold
Modifica dati:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
input#name: 
\series default
input con tipo text ed id name, in cui l'utente puÃ² inserire il proprio
 nome
\end_layout

\begin_layout Itemize

\series bold
input#surname: 
\series default
input con tipo text ed id surname, in cui l'utente puÃ² inserire il poprio
 cognome
\end_layout

\begin_layout Itemize

\series bold
input#password: 
\series default
input con tipo password ed id password, in cui l'utente puÃ² inserire la
 nuova password
\end_layout

\begin_layout Itemize

\series bold
input#password2: 
\series default
input con tipo password ed id password2, in cui l'utente deve inserire nuovament
e la nuova password, nel caso in cui l' abbia inserita nel campo precedente
\end_layout

\begin_layout Itemize

\series bold
input#oldPassword: 
\series default
input con tipo password ed id oldPassword, in cui l'utente deve inserire
 la password attuale per attuare le eventuali modifiche
\end_layout

\begin_layout Itemize

\series bold
button#submitChange: 
\series default
pulsante con id submitChange per confermare le modifiche, invoca il 
 metodo checkPassword() di UserDataView
\end_layout

\begin_layout Itemize

\series bold
button#reset: 
\series default
pulsante con id reset che cancella quanto scritto in tutti i campi dati
 del template invocando il metodo render() di UserDataView
\end_layout

\begin_layout Itemize

\series bold
button#denyChange: 
\series default
pulsante con id denyChange che annulla le modifiche e chiude il modulo di
 modifica dei dati invocando il metodo unrender() di UserDataView
\end_layout

\end_deeper
\end_body
\end_document
