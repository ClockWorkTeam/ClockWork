% Anteprima del sorgente

%% LyX 2.0.4 created this file.  For more info, see http://www.lyx.org/.
%% Do not edit unless you really know what you are doing.
\documentclass[italian,english]{article}
\usepackage[T1]{fontenc}
\usepackage[latin9]{inputenc}
\usepackage{babel}
\usepackage{amssymb}
\PassOptionsToPackage{normalem}{ulem}
\usepackage{ulem}
\usepackage[unicode=true]
 {hyperref}

\makeatletter

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% LyX specific LaTeX commands.
\providecommand{\LyX}{\texorpdfstring%
  {L\kern-.1667em\lower.25em\hbox{Y}\kern-.125emX\@}
  {LyX}}

\makeatother

\begin{document}

\section{Ambiente di progetto}

Nella seguente sezione verrà descritto in dettaglio l'ambiente di
sviluppo che il gruppo Clockworkteam andrà ad utilizzare per lo svolgimento
del progetto


\subsection{Ambiente generale}

Questa sezione è dedicata a caratteristiche dell'ambiente di progetto
che si ripercuotono su tutti gli altri ambienti


\subsubsection{Sistemi operativo}

Il sistema operativo utilizzato durante lo sviluppo del progetto non
è vincolante, i vari membri del gruppo avranno a disposizione libertà
di sceltà sule piattaforme di sviluppo. Inoltre l'utilizzo di SO permetterà
di verificare la portabilità su più SO.


\subsection{Ambientale documentale}


\subsubsection{Scrittura documenti}

La scrittura dei documenti averrà tramite codice \uline{LATEX}
utilizzando il seguente editor:
\begin{itemize}
\item \LyX{} (\href{http://www.lyx.org}{http://www.lyx.org}) versione 2.0
\end{itemize}
Ogni capitolo di un qualsiasi documento verrà scritto attraverso l'editor
\LyX{}, successivamente verranno uniti sempre trammite \LyX{} da cui
verrà generato un documento in formato \uline{PDF}.


\subsubsection{Verifica ortografica}

Per la verifica ortografica verrà utilizzato il controllore interno
dell'editor \LyX{} che verrà eseguito direttamente dal compilatore
stesso dal menu Strumenti>Correttore Ortografico o premendo il tasto
F8. 


\subsubsection{Pianificazione}

Per quanto riguarda la pianificazione delle attività legate allo sviluppo
del progetto e la gestione delle risorse verrà utilizzato lo strumento
Microsoft Project 2010, strumento fornito dal servizio \uline{MSDNAA}
di Microsoft in collaborazione con la facoltà di Matematica Pura ed
Applicata dell'Università degli studi di Padova. Consci del fatto
che il programma è compatibile solo su sistemi operativi Windows si
è deciso di installare una macchina virtuale Windows XP (fornito anch'essa
dalla MSDNAA) con installato il programma


\subsubsection{Grafici UML}

I grafici UML verranno realizzati trammite programma Bouml versione
4.23 per via della facilità di utilizzo e per il fatto che il programma
aderisce agli standard UML2


\subsubsection{Documentazione semi-automatica}

\selectlanguage{italian}%
Lo strumento di documentazione semi-automatica impiegato sarà \textbf{Javadoc}
versione 1.5, funzionalità di \uline{Java} che permette di creare
tutta la documentazione relativa ad una porzione di codice a partire
dai commenti.

\selectlanguage{english}%

\subsection{Ambiente di sviluppo}


\subsubsection{Strumenti di versionamento}

Come strumento di versionamento si è deciso di utilzzare \uline{git}

\selectlanguage{italian}%
\emph{\uline{git}} è uno strumento di versionamento veloce e di
facile apprendimento che rappresenta uno dei migliori strumenti attualmente
esistenti. Per lo sviluppo collaborativo abbiamo deciso di appoggiarci
al servizio \uline{Github}\foreignlanguage{english}{(\href{https://github.com/}{https://github.com/})
}he fornisce non solo un repository \emph{\uline{git}}, ma anche
strumenti utili alla collaborazione fra più persone, come il servizio
di \emph{\uline{ticket}}, \emph{wiki }e \emph{\uline{milestone}}\emph{.}

Per quanto riguarda l'uso di\uline{ }\emph{\uline{git}}\emph{
}sui computer di sviluppo, si è deciso l'uso della versione ufficiale
rilasciata dal team di sviluppo di \emph{git} ($\geqslant1.7.8$)

\selectlanguage{english}%

\subsubsection{Ambiente di codifica}

Per la scrittura del codice del codice HTML si è deciso di utilizzare
\uline{Geany} versione 0.21


\subsection{Ambiente di verifica e validazione}

Di seguito vengono elencati gli strumenti scelti per la verifica e
la validazione


\subsubsection{Analisi statica}

L'analisi statica verrà eseguita tramite il programma \uline{Yasca}
(\href{http://www.scovetta.com/yasca.html}{http://www.scovetta.com/yasca.html})
programma open source che permette l'analisi statica del codice HTML.
La versione che andremo ad utilizzare è la 2.1


\subsubsection{Test}

\selectlanguage{italian}%
Per i test su browser useremo il plug-in per \emph{Mozilla Firefox}\textbf{
}Selenium IDE versione 1.4.1.

\selectlanguage{english}%

\subsubsection{Analisi dinamica}

\selectlanguage{italian}%
L'analisi dinamica verrà effettuata con il plug-in per \emph{Mozilla
Firefox} \textbf{Firebug }($\geqslant1.8.3$). Per i test di velocità
dell'applicazione web useremo il plugin per \emph{Chrome} \textbf{SpeedTracer}
versione 2.4

\selectlanguage{english}%

\subsubsection{Validazione}

Per la verifica del codice HTML5 e CSS 2.1 andremo ad utilizzare il
W3C Validator raggiungibile al seguente indirizzo: \href{http://validator.w3.org/}{http://validator.w3.org/}.
\end{document}
