#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble

\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Specifica Server
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/server/packageServer.pdf
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Architettura del server
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Il server contiene i seguenti package:
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Package-dao"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.shared
\family default
 (vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Package-shared"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.usermanager 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Package-usermanager"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.functionmanager 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Package-functionmanager"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer
\family default
 (vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Package-transfer"

\end_inset

)
\end_layout

\begin_layout Subsection
Package dao
\begin_inset CommandInset label
LatexCommand label
name "sub:Package-dao"

\end_inset


\end_layout

\begin_layout Standard
Il package 
\family typewriter
mytalk.server.dao
\family default
 contiene tutte le classi che si occupano di eseguire le operazioni sul
 database.
\end_layout

\begin_layout Paragraph

\series bold
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.shared
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Viene utilizzato da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.usermanager
\end_layout

\end_deeper
\begin_layout Paragraph

\series bold
Costituito da:
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.JavaConnectionSQLite
\family default
 (vedasi sezione
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:JavaConnectionSQLite"

\end_inset

 )
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.LoginDao
\family default
 (vedasi sezione
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.dao.LoginDao"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.LoginDaoSQL
\family default
 (vedasi sezione
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.dao.LoginDaoSQL"

\end_inset

 )
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.RecordMessageDao
\family default
 (vedasi sezione
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.dao.RecordMessageDao"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.RecordMessageDaoSQL
\family default
 (vedasi sezione
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.dao.RecordMessageDaoSQL"

\end_inset

 )
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.TutorialsDaoSQL
\family default
 (vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.dao.TutorialsDaoSQL"

\end_inset

 ) 
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.UserDao
\family default
 (vedasi sezione
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.dao.UserDao"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.UserDaoSQL
\family default
 (vedasi sezione
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.dao.UserDaoSQL"

\end_inset

)
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.server.dao.JavaConnectionSQLite
\family default

\begin_inset CommandInset label
LatexCommand label
name "sub:JavaConnectionSQLite"

\end_inset


\end_layout

\begin_layout Standard
La classe JavaConnectionSQLite contiene tutti i metodi per l'esecuzione
 di query all'interno del database
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/server/dao/pdf/JavaConnectionSQLite.pdf
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Classe JavaConnectionSQLite
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Viene utilizzata da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.dao.LoginDaoSQL
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.RecordMessageDaoSQL
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.TutorialsDaoSQL
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.UserDaoSQL
\end_layout

\end_deeper
\begin_layout Paragraph
Attributi privati
\end_layout

\begin_layout Itemize

\series bold
Connection connection:
\series default
 conterrà il riferimento alla connessione al database
\end_layout

\begin_layout Itemize

\series bold
Statement statement: 
\series default
conterrà il riferimento alla risorsa impiegata per eseguire query sul database
\end_layout

\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
JavaConnectionSQLite():
\series default
 costruttore della classe che si occuperà di creare la connessione al database.
 In caso di fallimento della connessione, verrà lanciata un eccezione che
 stamperà a video l'errore riscontrato
\end_layout

\begin_layout Itemize

\series bold
void finalize():
\series default
 metodo che fungerà da distruttore della classe JavaConnectionSQLite.
 Prima di distruggere una istanza, la connessione al database dovrà essere
 chiusa.
 
\end_layout

\begin_layout Itemize

\series bold
ResultSet select(String, String, String, String):
\series default
 metodo che ritornerà una tupla di valori, della tabella indicata, che rispettan
o i parametri di controllo indicati.
 Quindi eseguirà la query sul database utilizzando i parametri passati:
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
table:
\emph default
 rappresenterà il nome della tabella su cui eseguire la query
\end_layout

\begin_layout Itemize

\emph on
column:
\emph default
 rappresenterà le colonne che saranno selezionate
\end_layout

\begin_layout Itemize

\emph on
condition:
\emph default
 sarà la condizione principale applicata per effettuare la selezione
\end_layout

\begin_layout Itemize

\emph on
extra:
\emph default
 rappresenterà le condizioni extra, se necessarie
\end_layout

\begin_layout Standard
Se la funzione di esecuzione della query non lancerà alcuna eccezione, il
 metodo ritornerà un
\emph on
 ResultSet
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
boolean executeUpdate(String):
\series default
 metodo che si occuperà di eseguire la query passata nel database, aggiornandolo.
 Se la query verrà conclusa con successo il metodo ritornerà
\emph on
 true
\emph default
, altrimenti ritornerà
\emph on
 false
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.server.dao.LoginDao
\family default

\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.dao.LoginDao"

\end_inset


\end_layout

\begin_layout Standard
L'interfaccia LoginDao gestisce tutti i dati che riguardano i tentativi
 di connessione e disconnessione al sistema.
 Fornisce l'interfaccia minima necessaria a tutte le classi derivate che
 dovranno offrire tale servizio
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename img/server/dao/pdf/LoginDao.pdf
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Interfaccia LoginDao
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.shared.User
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Viene implementata da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.dao.LoginDaoSQL
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Viene utilizzata da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.usermanager.AuthenticationManager
\end_layout

\end_deeper
\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
User login(String, String, String):
\series default
 metodo che controllerà la correttezza dei dati inseriti da un utente per
 connettersi al sistema, e in caso affermativo reimpostera l'IP
\end_layout

\begin_layout Itemize

\series bold
boolean logout(User):
\series default
 metodo che effettuerà la disconnessione dal sistema
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.server.dao.LoginDaoSQL
\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.dao.LoginDaoSQL"

\end_inset


\end_layout

\begin_layout Standard
La classe LoginDaoSQL si occupa di gestire tutti i dati riguardanti i tentativi
 di autenticazione all'interno del sistema.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/server/dao/pdf/LoginDaoSQL.pdf
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Classe LoginDaoSQL
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.dao.JavaConnectionSQLite
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.shared.UserList
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.shared.User
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Implementa: 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.dao.LoginDao
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Viene utilizzata da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.usermanager.AuthenticationManager
\end_layout

\end_deeper
\begin_layout Paragraph
Attributi privati
\end_layout

\begin_layout Itemize

\series bold
JavaConnectionSQLite connection: 
\series default
conterrà il riferimento all'istanza della classe JavaConnectionSQLite 
\end_layout

\begin_layout Itemize

\series bold
UserList userList:
\series default
 conterrà il riferimento alla lista degli utenti registrati nel database
\end_layout

\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
LoginDaoSQL(JavaConnectionSQLite, UserList):
\series default
 costruttore della classe che dovrà impostare il valore degli attributi
 secondo il valore dei parametri passati
\end_layout

\begin_layout Itemize

\series bold
User login(Stringe, String, String):
\series default
 metodo che gestirà l'operazione di 
\emph on
login
\emph default
 dell'utente.
 Dovrà controllare la correttezza dell'username e della password inseriti.
 Crearà una query per verificare se esiste un utente con lo
\emph on
 username
\emph default
 ricevuto e che la password associata a tale utente sia uguale a quella
 ricevuta.
 Se non dovesse esistere tale parametro restituirà 
\emph on
null
\emph default
, in caso contrario aggiornerà l'indirizzo IP dell'utente che vuole effettuare
 la connessione
\end_layout

\begin_layout Itemize

\series bold
boolean logout(User):
\series default
 metodo che gestirà l'operazione di 
\emph on
logout
\emph default
 dell'utente aggiornando l'indirizzo IP a 
\emph on
0
\emph default
, sia nell'istanza dell'utente contenuta nel package 
\family typewriter
mytalk.server.shared
\family default
, sia in quello presente nel database
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.server.dao.RecordMessageDao
\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.dao.RecordMessageDao"

\end_inset


\end_layout

\begin_layout Standard
L'interfaccia RecordMessageDao gestisce tutti i dati che riguardano i messaggi
 differiti inviati ai vari utenti.
 Fornisce l'interfaccia minima necessaria a tutte le classi derivate che
 dovranno offrire tale servizio
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename img/server/dao/pdf/RecordMessageDao.pdf
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
Interfaccia RecordMessageDao
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazione d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.shared.RecordMessage
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Viene implementata da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.dao.RecordMessageDaoSQL
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Viene utilizzata da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.usermanager.UserManager
\end_layout

\end_deeper
\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
Vector<RecordMessage> getAllMessages(String):
\series default
 metodo che ritornerà il vettore dei messaggi differiti che sono stati mandati
 ad un utente
\end_layout

\begin_layout Itemize

\series bold
RecordMessage createMessage(String, String, String, String):
\series default
 metodo che aggiungerà un messaggio differito nel database 
\end_layout

\begin_layout Itemize

\series bold
RecordMessage getMessage(String, String, String, String):
\series default
 metodo che restituirà un dato messaggio differito presente nel database
\end_layout

\begin_layout Itemize

\series bold
boolean removeMessage(RecordMessage):
\series default
 metodo che eliminerà un messaggio differito dal database
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.server.dao.RecordMessageDaoSQL
\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.dao.RecordMessageDaoSQL"

\end_inset


\end_layout

\begin_layout Standard
La classe RecordMessageDaoSQL si occupa di gestire tutti i dati riguardanti
 i messaggi differiti.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/server/dao/pdf/RecordMessageDaoSQL.pdf
	scale 80

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Classe RecordMessageDaoSQLite
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazione d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.dao.JavaConnectionSQLite
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.shared.RecordMessage
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.shared.User
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.shared.UserList
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Implementata:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.dao.RecordMessageDao
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Viene utilizzata da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.usermanager.UserManager
\end_layout

\end_deeper
\begin_layout Paragraph
Attributi privati
\end_layout

\begin_layout Itemize

\series bold
JavaConnectionSQLite connection:
\series default
 conterrà il riferimento all'istanza della classe JavaConnectionSQLite contenent
e i riferimenti al server
\end_layout

\begin_layout Itemize

\series bold
UserList userList:
\series default
 conterrà il riferimento alla lista degli utenti registrati nel database
\end_layout

\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
RecordMessageDaoSQL(JavaConnectionSQLite, UserList):
\series default
 costruttore della classe che dovrà impostare il valore degli attributi
 secondo il valore dei parametri passati
\end_layout

\begin_layout Itemize

\series bold
Vector<RecordMessage> getAllMessages(String):
\series default
 metodo che ritornerà il vettore dei messaggi differiti che sono stati mandati
 ad un utente.
 Il metodo dovrà verificare che esista realmente un utente associato allo
 
\emph on
username
\emph default
 ricevuto, se esisterà creerà la query da effettuare per trovare tutti i
 messaggi che come destinatario avranno tale username.
 Se la query restituirà almeno un messaggio differito, lo inserirà nel vettore
 dell'utente.
\end_layout

\begin_layout Itemize

\series bold
RecordMessage getMessage(String sender, String, String, String):
\series default
 metodo che ritornerà il messaggio differito avente le caratteristiche richieste.
 Il metodo inizialmente troverà tutti i messaggi del destinatario richiesto,
 invocando il metodo gatAllMessages(String), successivamente ricercherà
 tra quei messaggi quello corrispondente alle richieste e lo restituirà.
 Nel caso che il messaggio non esista verrà restituito 
\emph on
null
\end_layout

\begin_layout Itemize

\series bold
RecordMessage createMessage(String, String, String, String):
\series default
 metodo che creerà un messaggio differito nel database.
 Dovrà verificare che l'utente destinatario esista nel database.
 Successivamente dovrà creare la query per aggiungere nel database il messaggio.
 Se l'aggiunta avverrà con successo, verrà aggiornata anche l'istanza dell'utent
e nel package 
\family typewriter
mytalk.server.shared.User
\series bold
.

\family default
\series default
 Il metodo ritornerà il messaggio creato, che sarà
\emph on
 null
\emph default
 nel caso in cui la creazione non sia andata a buon fine
\end_layout

\begin_layout Itemize

\series bold
boolean removeMessage(RecordMessage):
\series default
 metodo che eliminerà un messaggio differito dal database.
 Il metodo dovrà creare la query per la cancellazione del messaggio differito
 nel database.
 Successivamente verrà aggiornata anche l'istanza dell'utente nel package
\family typewriter
\series bold
 
\series default
mytalk.server.shared.User.

\family default
 Nel caso l'eliminazione avvenga con successo il metodo ritornerà
\emph on
 true
\emph default
, in caso contrario ritornerà
\emph on
 false
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.server.dao.TutorialsDaoSQL
\family default

\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.dao.TutorialsDaoSQL"

\end_inset


\end_layout

\begin_layout Standard
La classe TutorialsDaoSQL si occupa di gestire i tutorial presenti nel database
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/server/dao/pdf/TutorialsDaoSQL.pdf
	scale 80

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Classe TutorialsDaoSQLite
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazione d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.dao.JavaConnectionSQLite
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.shared.Tutorials
\end_layout

\end_deeper
\begin_layout Paragraph
Attributi privati
\end_layout

\begin_layout Itemize

\series bold
JavaConnectionSQLite connection:
\series default
 conterrà il riferimento all'istanza della classe JavaConnectionSQLite contenent
e i riferimenti al server
\end_layout

\begin_layout Itemize

\series bold
Tutorials tutorials:
\series default
 conterrà il riferimento alla lista dei tutorials presenti nel server
\end_layout

\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
TutorialsDaoSQL(JavaConnectionSQLite):
\series default
 costruttore della classe che dovrà impostare il valore degli attributi
 secondo il valore dei parametri passati
\end_layout

\begin_layout Itemize

\series bold
Tutorials getTutorials():
\series default
 metodo che restituirà la lista di tutorials presenti in 
\family typewriter
mytalk.server.shared.Tutorials
\end_layout

\begin_layout Paragraph
Metodi privati
\end_layout

\begin_layout Itemize

\series bold
void getTutorialsFromDB():
\series default
 metodo che inserirà in 
\family typewriter
mytalk.server.shared.Tutorials
\family default
 i tutorials presenti nel database
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.server.dao.UserDao
\family default

\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.dao.UserDao"

\end_inset


\end_layout

\begin_layout Standard
L'interfaccia UserDao gestisce tutti i dati che riguardano gli utenti.
 Fornisce l'interfaccia minima necessaria a tutte le classi derivate che
 dovranno offrire tale servizio
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename img/server/dao/pdf/UserDao.pdf
	scale 70

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Interfaccia UserDao
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazione d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
La classe utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.shared.User
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Viene implementata da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.dao.UserDaoSQL
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Viene utilizzata da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.usermanager.UserManager
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.usermanager.AuthenticationManager
\end_layout

\end_deeper
\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
User createUser(String, String, String, String, String):
\series default
 metodo che creerà un utente nel database
\end_layout

\begin_layout Itemize

\series bold
boolean removeUser(String):
\series default
 metodo che eliminerà un utente dal database
\end_layout

\begin_layout Itemize

\series bold
boolean setPassword(String, String):
\series default
 metodo che imposterà la password dell'utente corrispondente ad
\emph on
 username
\emph default
 con il nuovo valore
\end_layout

\begin_layout Itemize

\series bold
boolean setName(String, String):
\series default
 metodo che imposterà il nome dell'utente corrispondente ad 
\emph on
username
\emph default
 con il nuovo valore
\end_layout

\begin_layout Itemize

\series bold
boolean setSurname(String, String):
\series default
 metodo che imposterà il cognome dell'utente corrispondente ad 
\emph on
username
\emph default
 con il nuovo valore
\end_layout

\begin_layout Itemize

\series bold
User getUser(String)
\series default
: metodo che restituirà l'utente avente username corrispondente a quello
 dato
\end_layout

\begin_layout Itemize

\series bold
boolean checkPassword(String, String):
\series default
 metodo che controllerà la correttezza dei parametri dati 
\end_layout

\begin_layout Itemize

\series bold
Vector<User> getAllUsers(): 
\series default
metodo che restituirà la lista di tutti gli utenti presenti nel database
\end_layout

\begin_layout Subsubsection
mytalk.server.dao.UserDaoSQL
\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.dao.UserDaoSQL"

\end_inset


\end_layout

\begin_layout Standard
La classe UserDaoSQL si occupa di gestire tutti i dati che riguardano gli
 utenti.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/server/dao/pdf/UserDaoSQL.pdf
	scale 80

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Classe UserDaoSQL
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.dao.JavaConnectionSQLite
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.shared.UserList
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.shared.User
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Implementa
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.dao.UserDao
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Viene utilizzata da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.usermanager.UserManager
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.usermanager.AuthenticationManager
\end_layout

\end_deeper
\begin_layout Paragraph
Attributi privati
\end_layout

\begin_layout Itemize

\series bold
JavaConnectionSQLite connection:
\series default
 riferimento all'istanza della classe JavaConnectionSQLite contente i riferiment
i al server
\end_layout

\begin_layout Itemize

\series bold
UserList userList:
\series default
 riferimento alla lista degli utenti registrati nel database
\end_layout

\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
UserDaoSQL(JavaConnectionSQLite connection, UserList users):
\series default
 costruttore della classe che dovrà impostare il valore degli attributi
 secondo il valore dei parametri passati
\end_layout

\begin_layout Itemize

\series bold
User createUser(String username, String password, String name, String surname,
 String IP):
\series default
 metodo che crea un utente con i parametri passati
\begin_inset Foot
status open

\begin_layout Plain Layout
L'esistenza di un utente con lo username uguale a quello passato come parametro,
 verrà accertata nella classe 
\family typewriter
mytalk.server.dao.shared.UserList.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\series bold
boolean removeUser(String username):
\series default
 metodo che elimina un utente dal database.
 Se l'eliminazione è andata a buon fine ritorna
\emph on
 true
\emph default
, altrimenti ritorna
\emph on
 false
\end_layout

\begin_layout Itemize

\series bold
boolean setPassword(String username, String password):
\series default
 metodo che imposta la password dell'utente con il nuovo valore passato.
 Se il cambiamento è andato a buon fine, il metodo ritorna
\emph on
 true
\emph default
, altrimenti ritorna
\emph on
 false
\end_layout

\begin_layout Itemize

\series bold
boolean setName(String username, String name):
\series default
 metodo che imposta il nome dell'utente con il nuovo valore passato.
 Se il cambiamento è andato a buon fine, si aggiorna anche l'istanza dell'utente
 presente in 
\family typewriter
mytalk.server.shared.User
\family default
 ed il metodo ritorna
\emph on
 true
\emph default
, altrimenti ritorna
\emph on
 false
\end_layout

\begin_layout Itemize

\series bold
boolean setSurname(String username, String surname):
\series default
 metodo che imposta il cognome dell'utente con il nuovo valore.
 Se il cambiamento è andato a buon fine, si aggiorna anche l'istanza dell'utente
 presente in 
\family typewriter
mytalk.server.shared.User
\family default
 ed il metodo ritorna
\emph on
 true
\emph default
, altrimenti ritorna
\emph on
 false
\end_layout

\begin_layout Itemize

\series bold
User getUser(String username)
\series default
: metodo che restituisce l'utente, avente username corrispondente a quello
 dato, presente in 
\family typewriter
mytalk.server.shared.UserList
\end_layout

\begin_layout Itemize

\series bold
boolean checkPassword(String username, String password):
\series default
 metodo che controlla nel database la corrispondenza dell'username passato
 con la password passata
\end_layout

\begin_layout Itemize

\series bold
Vector<User> getAllUsers(): 
\series default
metodo che restituisce gli utenti presenti in 
\family typewriter
mytalk.server.shared.User
\end_layout

\begin_layout Paragraph
Metodi privati
\end_layout

\begin_layout Itemize

\series bold
void getUsersFromDB():
\series default
 metodo che inserisce in 
\family typewriter
mytalk.server.shared.userList
\family default
 tutti gli utenti presenti nel database
\end_layout

\begin_layout Subsection
Package shared
\begin_inset CommandInset label
LatexCommand label
name "sub:Package-shared"

\end_inset


\end_layout

\begin_layout Standard
Il package shared contiene le classi contenenti le informazioni condivise
 fra i vari strati del server
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/server/shared/pdf/packageShared.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Package shared
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph

\series bold
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Il package è utilizzato da: 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.dao
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.usermanager
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.functionmanager
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer
\end_layout

\end_deeper
\begin_layout Paragraph
Costituito dalle classi:
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.shared.RecordMessage
\family default
 (vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.shared.RecordMessage"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.shared.User 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.shared.User"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.shared.UserList
\family default
 (vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.shared.UserList"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.shared.Tutorials 
\family default
(vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.shared.Tutorials"

\end_inset

)
\end_layout

\begin_layout Subsubsection
mytalk.server.shared.RecordMessage
\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.shared.RecordMessage"

\end_inset


\end_layout

\begin_layout Standard
La classe RecordMessage farà da contenitore per i dati riguardanti i messaggi
 differiti inseriti all'interno del database
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename img/RecordMessage.pdf
	scale 80

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Classe RecordMessage
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Viene utilizzata da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.shared.User
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.RecordMessageDao
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.RecordMessageDaoSQL
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.functionmanager.Converter
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.usermanager.UserManager
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer.RecordMessageTransfer
\end_layout

\end_deeper
\begin_layout Standard
\noindent
\align left

\series bold
Attributi privati:
\end_layout

\begin_layout Itemize

\series bold
String sender: 
\series default
rappresenta il mittente, colui che crea il messaggio
\end_layout

\begin_layout Itemize

\series bold
String addressee: 
\series default
rappresenta il destinatario, colui che riceve il messaggio
\series bold
 
\end_layout

\begin_layout Itemize

\series bold
String path:
\series default
 rappresenta l'indirizzo dove si trova il messaggio differito all'interno
 del server
\end_layout

\begin_layout Itemize

\series bold
String dateCreation:
\series default
 rappresenta la data di creazione del messaggio
\end_layout

\begin_layout Standard
\noindent
\align left

\series bold
Metodi pubblici:
\end_layout

\begin_layout Itemize

\series bold
RecordMessage(String sender, String addressee, String path, String dateCreation)
:
\series default
 costruttore che imposta i valori degli attributi secondo i valori dei parametri
 passati
\end_layout

\begin_layout Itemize

\series bold
String getSender(): 
\series default
ritorna il mittente del messaggio
\end_layout

\begin_layout Itemize

\series bold
String getAddressee(): 
\series default
ritorna il destinatario del messaggio
\end_layout

\begin_layout Itemize

\series bold
String getPath():
\series default
 ritorna l'indirizzo dove si trova il messaggio differito all'interno del
 server
\end_layout

\begin_layout Itemize

\series bold
String getDate(): 
\series default
ritorna la data di creazione del messaggio
\end_layout

\begin_layout Subsubsection
mytalk.server.shared.Tutorials
\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.shared.Tutorials"

\end_inset


\end_layout

\begin_layout Standard
La classe Tutorials rappresenterà la lista dei tutorials presenti nel server
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename img/Tutorials.pdf
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Classe Tutorials
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Viene utilizzata da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.dao.TutorialsDao
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer.AuthenticationTransfer
\end_layout

\end_deeper
\begin_layout Paragraph
Attributi privati
\end_layout

\begin_layout Itemize

\series bold
Map<String, String> tutorials: 
\series default
rappresenta la lista dei tutorials, come chiave di identificazione si userà
 il titolo del tutorial
\end_layout

\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
Tutorials(int num):
\series default
 costruttore che inizializza la lista di tutorials dellla dimensione passatagli
 dal parametro
\end_layout

\begin_layout Itemize

\series bold
void insert(String title, String url): 
\series default
metodo che inserisce un nuovo tutorial nella lista
\end_layout

\begin_layout Itemize

\series bold
Map<String, String> getTutorials(): 
\series default
metodo che restituisce la lista di tutorial
\end_layout

\begin_layout Subsubsection
mytalk.server.shared.User
\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.shared.User"

\end_inset


\end_layout

\begin_layout Standard
La classe User farà da contenitore per i dati riguardanti gli utenti presenti
 nel database
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename img/User.pdf
	scale 80

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Classe User
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Viene utilizzata da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.shared.UserList
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.LoginDao
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.LoginDaoSQL
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.RecordMessageDaoSQL
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.UserDao
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.UserDaoSQL
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.functionmanager.Converter
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.usermanager.AuthenticationManager
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.usermanager.UserManager
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer.AuthenticationTransfer
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer.UserTransfer
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Utilizza
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.shared.RecordMessage
\end_layout

\end_deeper
\begin_layout Paragraph
Attributi privati
\end_layout

\begin_layout Itemize

\series bold
String username:
\series default
 rappresenta lo username dell'utente
\end_layout

\begin_layout Itemize

\series bold
String name: 
\series default
rappresenta il nome dell'utente
\end_layout

\begin_layout Itemize

\series bold
String surname:
\series default
 rappresenta il cognome dell'utente
\end_layout

\begin_layout Itemize

\series bold
String IP:
\series default
 rappresenta l'indirizzo IP dell'utente
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Se la stringa è uguale a 0 significa che l'utente in questione non è in
 linea, se è diverso l'utente è in linea.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\series bold
Vector<RecordMessage> messages:
\series default
 rappresenta tutti i RecordMessage inviati all'utente in questione mentre
 questo non è in linea
\end_layout

\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
User(String username, String name, String surname, String IP):
\series default
 costruttore che imposta i valori degli attributi secondo il valore dei
 parametri passati
\end_layout

\begin_layout Itemize

\series bold
String getUsername()
\series default
: metodo che ritorna lo username dell'utente
\end_layout

\begin_layout Itemize

\series bold
String getName()
\series default
: metodo che ritorna il nome dell'utente
\end_layout

\begin_layout Itemize

\series bold
String getSurname()
\series default
: metodo che ritorna il cognome dell'utente
\end_layout

\begin_layout Itemize

\series bold
String getIP()
\series default
: metodo che ritorna l'indirizzo IP dell'utente
\end_layout

\begin_layout Itemize

\series bold
void setName(String name)
\series default
: metodo che imposta il nome dell'utente con il nuovo valore
\end_layout

\begin_layout Itemize

\series bold
void setSurname(String surname)
\series default
: metodo che imposta il cognome dell'utente con il nuovo valore
\end_layout

\begin_layout Itemize

\series bold
void setIP(String IP)
\series default
: metodo che imposta l'indirizzo IP dell'utente con il nuovo valore
\end_layout

\begin_layout Itemize

\series bold
Vector<RecordMessage> getMessages()
\series default
: metodo che ritorna il vettore contenente i messaggi differiti
\end_layout

\begin_layout Itemize

\series bold
void setMessages(Vector<RecordMessage> messagesNew)
\series default
: metodo che cambia la lista dei messaggi differiti inviati all'utente in
 questione
\end_layout

\begin_layout Itemize

\series bold
void setMessage(RecordMessage message)
\series default
: metodo che aggiunge un messaggio differito nel vettore messages
\end_layout

\begin_layout Itemize

\series bold
void removeMessage(RecordMessage message)
\series default
: metodo che rimuove un messaggio differito dal vettore dei messaggi
\end_layout

\begin_layout Subsubsection
mytalk.server.shared.UserList
\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.shared.UserList"

\end_inset


\end_layout

\begin_layout Standard
La classe UserList rappresenterà la lista degli utenti registrati al server
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename img/UserList.pdf
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Classe UserList
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
La classe è utilizzata da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.dao.LoginDaoSQL
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.RecordMessageDaoSQL
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.UserDaoSQL
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Utilizza
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.shared.User
\end_layout

\end_deeper
\begin_layout Paragraph
Attributi privati
\end_layout

\begin_layout Itemize

\series bold
Vector<User> users:
\series default
 rappresenta la lista degli utenti
\end_layout

\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
UserList():
\series default
 costruttore della classe che inizializza il vettore
\end_layout

\begin_layout Itemize

\series bold
boolean addUser(User user): 
\series default
metodo che inserisce un nuovo utente nella lista degli utenti.
 L'utente viene inserito nel vettore solo nel caso in cui non esistano altri
 utenti che hanno tale username
\end_layout

\begin_layout Itemize

\series bold
User getUser(String username): 
\series default
metodo che restituisce l'utente corrispondente ad un dato username
\end_layout

\begin_layout Itemize

\series bold
Vector<User> getAllUsers(): 
\series default
metodo che restituisce tutta la lista di utenti
\end_layout

\begin_layout Itemize

\series bold
boolean removeUser(String username): 
\series default
metodo che elimina un utente dal vettore di utenti
\end_layout

\begin_layout Subsection
Package usermanager 
\begin_inset CommandInset label
LatexCommand label
name "sub:Package-usermanager"

\end_inset


\end_layout

\begin_layout Standard
Lo strato manager del server si occupa delle funzionalità logiche del server
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/packageUsermanager.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\lang english
Package usermanager
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.shared
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Viene utilizzato da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.transfer
\end_layout

\end_deeper
\begin_layout Paragraph
Costituito dalle classi:
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.usermanager.AuthenticationManager
\family default
 (vedasi sezione
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.usermanager.AuthenicationManager"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.usermanager.UserManager 
\family default
(vedasi sezione
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.usermanager.UserManager"

\end_inset

)
\end_layout

\begin_layout Subsubsection
mytalk.server.usermanager.AuthenticationManager
\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.usermanager.AuthenicationManager"

\end_inset


\end_layout

\begin_layout Standard
La classe AuthenticationManager si occupa di passare allo strato dao i dati
 necessari per la verifica dell'autenticazione
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename img/AuthenticationManager.pdf
	scale 80

\end_inset


\begin_inset Caption

\begin_layout Plain Layout

\lang english
Classe AuthenticationManager
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.dao.LoginDao
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.LoginDaoSQL
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.UserDao
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.UserDaoSQL
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Viene utilizzata da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.transfer.AuthenticationTransfer
\end_layout

\end_deeper
\begin_layout Paragraph
Attributi privati
\end_layout

\begin_layout Itemize

\series bold
LoginDao loginDao:
\series default
 riferimento alla istanza della classe 
\family typewriter
mytalk.server.dao.LoginDaoSQL
\family default
 contenente i dati per effettuare l'autenticazione
\series bold
 
\end_layout

\begin_layout Itemize

\series bold
UserDao userDao:
\series default
 riferimento alla istanza della classe 
\family typewriter
mytalk.server.dao.UserDaoSQL
\family default
 contenente i dati per effettuare le operazioni di creazione e cancellazione
 dell'utente
\end_layout

\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
void init(LoginDao loginDao, UserDao userDao):
\series default
 metodo che funge da costruttore della classe che dovrà impostare il valore
 degli attributi secondo il valore dei parametri passati
\end_layout

\begin_layout Itemize

\series bold
User login(String username, String password, String IP):
\series default
 metodo che passa i dati alla classe 
\family typewriter
mytalk.server.dao.LoginDaoSQL
\series bold
 
\family default
\series default
per poter effettuare l'operazione di login.
 In caso di successo tale metodo ritorna l'oggetto User corrispondente all'usern
ame
\end_layout

\begin_layout Itemize

\series bold
boolean logout(User user):
\series default
 metodo che effettua il logout dell'utente
\end_layout

\begin_layout Itemize

\series bold
User createUser(String username, String password, String name, String surname,
 String IP):
\series default
 metodo che crea un nuovo utente nella base di dati, purché lo username
 non sia già utilizzato 
\end_layout

\begin_layout Itemize

\series bold
boolean removeUser(String username):
\series default
 metodo che elimina un utente registrato dal database
\end_layout

\begin_layout Subsubsection
mytalk.server.usermanager.UserManager
\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.usermanager.UserManager"

\end_inset


\end_layout

\begin_layout Standard
La classe UserManager si occupa di gestire la modifica dei dati degli utenti
 e l'invio ai client della lista di utenti registrati al server
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename img/UserManager.pdf
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout

\lang english
classe UserManager
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.dao.UserDao
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.UserDaoSQL
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.RecordMessageDao
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.dao.RecordMessageDaoSQL
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Viene utilizzata da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.transfer.AuthenticationTransfer
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer.RecordMessageTransfer
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer.UserTransfer
\end_layout

\end_deeper
\begin_layout Paragraph
Attributi privati
\end_layout

\begin_layout Itemize

\series bold
UserDao userDao: 
\series default
viene utilizzato per eseguire le operazioni sull'utente e per recuperare
 la lista di tutti gli utenti registrati nel server
\end_layout

\begin_layout Itemize

\series bold
RecordMessageDao messageDao:
\series default
 permette le operazioni sui messaggi registrati
\end_layout

\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
void init(UserDao userDao, RecordMessageDao messageDao): 
\series default
metodo che funge da costruttore della classe
\end_layout

\begin_layout Itemize

\series bold
boolean checkPassword(User user, String password):
\series default
 metodo che controlla la corrispondenza dell'username passato con la password
 passata
\end_layout

\begin_layout Itemize

\series bold
boolean setPassword(User user, String password): 
\series default
metodo che modifica la password esistente con quella passata 
\end_layout

\begin_layout Itemize

\series bold
boolean setUserData(User user, String name, String surname): 
\series default
metodo che modifica il nome e il cognome esistenti con quelli passati
\end_layout

\begin_layout Itemize

\series bold
RecordMessage createMessage(String sender, String addressee, String path,
 String date): 
\series default
metodo che aggiunge un messaggio registrato destinato all'utente
\end_layout

\begin_layout Itemize

\series bold
Vector<RecordMessage> getMessages(String username):
\series default
 metodo che ritorna il vettore dei messaggi differiti che sono stati mandati
 ad un utente.
\end_layout

\begin_layout Itemize

\series bold
RecordMessage getMessage(String sender, String addressee, String path, String
 date):
\series default
 metodo che ritorna il messaggio differito avente le caratteristiche richieste.
 
\end_layout

\begin_layout Itemize

\series bold
boolean removeMessage(RecordMessage message): 
\series default
metodo che rimuove un messaggio registrato
\end_layout

\begin_layout Itemize

\series bold
User getUser(String username)
\series default
: metodo che restituisce l'utente corrispondente al dato username
\end_layout

\begin_layout Itemize

\series bold
Vector<User> getAllContacts(User user): 
\series default
metodo che restituisce tutti gli utenti presenti nel server, ad eccezione
 di quello dato
\end_layout

\begin_layout Subsection
Package functionmanager 
\begin_inset CommandInset label
LatexCommand label
name "sub:Package-functionmanager"

\end_inset


\end_layout

\begin_layout Standard
Il package functionmanager contiene tutte le classi che si occupano di convetire
 le strutture dati più complesse in stringhe per lo strato transfer
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/packageFunctionmanager.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Package functionmanager
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph

\series bold
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.shared
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Viene utilizzato da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.transfer
\end_layout

\end_deeper
\begin_layout Paragraph

\series bold
Costituito dalla classe:
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.functionmanager.Converter
\family default
 (vedasi sezione
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.functionmanager.Converter"

\end_inset

)
\end_layout

\begin_layout Subsubsection
mytalk.server.functionmanager.Converter
\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.functionmanager.Converter"

\end_inset


\end_layout

\begin_layout Standard
La classe Converter restituisce in forma di stringa il vettore di utenti
 passato per argomento
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/Converter.pdf
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Classe Converter
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Viene utilizzato da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.transfer.AuthenticationTransfer
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer.RecordMessageTransfer
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer.UserTransfer
\end_layout

\end_deeper
\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
String convertUsers(Vector<User> users, String type):
\series default
 metodo che converte in forma di stringa il vettore di utenti passato per
 argomento, inserendo inizialmente la stringa type e il numero di utenti
 presenti nel vettore passato
\end_layout

\begin_layout Itemize

\series bold
String convertMessages(Vector<RecordMessage> mex, String type):
\series default
 metodo che converte in forma di stringa il vettore di messaggi passato
 per argomento, inserendo inizialmente la stringa type e il numero di messaggi
 presenti nel vettore
\end_layout

\begin_layout Itemize

\series bold
String convertTutorials(Map<String, String> tutorials, String type):
\series default
 metodo che converte in forma di stringa i tutorials passati per argomento,
 inserendo inizialmente la stringa type e il numero di tutorials presenti
\end_layout

\begin_layout Subsection
Package transfer 
\begin_inset CommandInset label
LatexCommand label
name "sub:Package-transfer"

\end_inset


\end_layout

\begin_layout Standard
Il package 
\family typewriter
mytalk.server.transfer
\family default
 si occupa della comunicazione con il client.
\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.usermanager
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.functionmanager
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.shared
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Comunica con:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.client.communication
\end_layout

\end_deeper
\begin_layout Paragraph
Costituito dalle classi:
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer.ListenerTransfer 
\family default
(vedasi sezione
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.transfer.ListenerTransfer"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer.AuthenticationTransfer
\family default
 (vedasi sezione
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:AuthenticationTransfer"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer.CallTransfer
\family default
 (vedasi sezione
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.transfer.CallTransfer"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer.ChatTransfer
\family default
 (vedasi sezione
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.transfer.ChatTransfer"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer.FileTransfer
\family default
 (vedasi sezione
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.transfer.FileTransfer"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer.RecordMessageTransfer
\family default
(vedasi sezione
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.transfer.RecordMessageTransfer"

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer.UserTransfer 
\family default
(vedasi sezione
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.transfer.UserTransfer"

\end_inset

)
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.server.transfer.ListenerTransfer
\family default

\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.transfer.ListenerTransfer"

\end_inset


\end_layout

\begin_layout Standard
La classe astratta ListenerTransfer implementa WebSocketServerTokenListener
 e viene estesa da tutte le altre classi dello strato.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/server/transfer/pdf/ListenerTransfer.pdf
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Classe ListenerTransfer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.functionmanager.Converter
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Implementa:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
org.jwebsocket.listener.WebSocketServerTokenListener
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Viene estesa da:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.transfer.AuthenticationTransfer
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer.CallTransfer
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer.ChatTransfer
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer.FileTransfer
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer.RecordMessageTransfer
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.transfer.UserTransfer
\end_layout

\end_deeper
\begin_layout Paragraph
Attributi protetti
\end_layout

\begin_layout Itemize

\series bold
[TokenServer] tokenServer:
\series default
 conterrà un riferimento al token server di JWebSocket
\end_layout

\begin_layout Itemize

\series bold
[Collection<WebSocketConnector>] connectedUsers
\series default
: conterrà la lista dei connettori collegati al server
\end_layout

\begin_layout Itemize

\series bold
[Converter] converter
\series default
: conterrà un riferimento alla classe Converter
\end_layout

\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
[void] setTokenServer(ServerMyTalk): 
\series default
metodo per inizializzare 
\emph on
tokenServer
\end_layout

\begin_layout Itemize

\series bold
[void] broadcastToAll(WebSocketPacket): 
\series default
metodo per inviare il pacchetto a tutti gli utenti presenti in 
\emph on
connectedUsers
\end_layout

\begin_layout Itemize

\series bold
[WebSocketConnector] getUserConnector(String): 
\series default
metodo per trovare il connettore dell'utente connesso, con il dato username,
 al sistema
\end_layout

\begin_layout Itemize

\series bold
[WebSocketConnector] getIpConnector(String):
\series default
 metodo per trovare il connettore, avente il dato indirizzo IP, connesso
 al sistema
\end_layout

\begin_layout Itemize

\series bold
[void] sendPacket(WebSocketPacket, WebSocketConnector): 
\series default
metodo per inviare il dato pacchetto al dato connettore
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.server.transfer.AuthenticationTransfer
\family default

\begin_inset CommandInset label
LatexCommand label
name "sub:AuthenticationTransfer"

\end_inset


\end_layout

\begin_layout Standard
La classe AuthenticationTransfer si occupa della registrazione e autenticazione
 degli utenti.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/server/transfer/pdf/AuthenticationTransfer.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption

\begin_layout Plain Layout

\lang english
Classe AuthenticationTransfer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.usermanager.AuthenticationManager
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.usermanager.UserManager
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.shared.Tutorials
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.shared.User
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Estende:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.transfer.ListenerTransfer
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Comunica con:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.client.AuthenticationCommunication
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.communication.ContactsCommunication
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.communication.TutorialCommunication
\end_layout

\end_deeper
\begin_layout Paragraph
Attributi privati
\end_layout

\begin_layout Itemize

\series bold
[AuthenticationManager] authenticationManager:
\series default
 conterrà il riferimento alla singola istanza della classe AuthenticationManager
 presente nel server
\end_layout

\begin_layout Itemize

\series bold
[UserManager] userManager:
\series default
 conterrà il riferimento alla singola istanza della classe UserManager presente
 nel server
\end_layout

\begin_layout Itemize

\series bold
[Tutorials] tutorials: 
\series default
conterrà il riferimento ai tutorials presenti nel package shared
\end_layout

\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
AuthenticationTransfer(AuthenticationManager, UserManager, Tutorials): 
\series default
costruttore della classe, dovrà inizializzaere gli attributi della classe
 con i parametri ricevuti
\end_layout

\begin_layout Itemize

\series bold
[void] processToken(WebSocketServerTokenEvent, Token):
\series default
 metodo per la gestione dei token in arrivo, in particolare si occuperà
 di quelli aventi come tipo:
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
login
\emph default
: invocherà il metodo 
\emph on
login(String, String, String) 
\emph default
della classe AuthenticationManager, usando come parametri lo username e
 la password, presenti nel token, e l'indirizzo IP del connettore da cui
 riceve il pacchetto.
 Se l'operazione non andrà a buon termine, invierà una risposta negativa
 al client, al contrario, invierà una risposta positiva al client e il nuovo
 indirizzo IP del contatto a tutti gli utenti connessi, utilizzando il metodo
 
\emph on
broadcastToAll(WebSocketPacket), 
\emph default
infine assegnerà al connettore lo username dell'utente autenticato
\end_layout

\begin_layout Itemize

\emph on
signUp
\emph default
: invocherà il metodo 
\emph on
createUser(String, String, String, String, String) 
\emph default
della classe AuthenticationManager, usando come parametri i dati presenti
 nel token, e l'indirizzo IP del connettore da cui riceve il pacchetto.
 Se l'operazione non andrà a buon termine, invierà una risposta negativa
 al client, al contrario, invierà una risposta positiva al client ed invierà
 il nuovo indirizzo IP del contatto a tutti gli utenti connessi, utilizzando
 il metodo 
\emph on
broadcastToAll(WebSocketPacket)
\emph default
 
\end_layout

\begin_layout Itemize

\emph on
getContacts
\emph default
: invocherà il metodo 
\emph on
getAllContacts(User) 
\emph default
della classe UserManager, per ottenere il vettore degli utenti presenti
 nel server, e il metodo 
\emph on
convertUsers(Vector<User>,String)
\emph default
 della classe Converter per convertire tale lista in stringa, infine restituirà
 al client il pacchetto contenente tale stringa
\end_layout

\begin_layout Itemize

\emph on
logout
\emph default
: invocherà il metodo 
\emph on
logout(User) 
\emph default
della classe AuthenticationManager, se l'operazione non andrà a buon termine,
 invierà una risposta negativa al client, al contrario, invierà una risposta
 positiva al client ed invierà il nuovo indirizzo IP del contatto a tutti
 gli utenti connessi, utilizzando il metodo 
\emph on
broadcastToAll(WebSocketPacket), 
\emph default
infine rimuoverà dal connettore lo username
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
[void] processOpened(WebSocketServerEvent): 
\series default
metodo che si occuperà della creazione di un processo.
 Aggiungerà il nuovo connettore ad 
\emph on
connectedUsers, 
\emph default
invocherà il metodo 
\emph on
convertTutorials(Map<String,String>, String) 
\emph default
della classe Converter e invierà la stringa così ottenuta al nuovo connettore
\end_layout

\begin_layout Itemize

\series bold
[void] processClosed(WebSocketServerEvent): 
\series default
metodo che si occuperà della chiusura di un processo.
 Se non si è fatta l'operazione di 
\emph on
logout
\emph default
 dal client, invocherà il metodo 
\emph on
logout(User) 
\emph default
della classe AuthenticationManager ed invierà il nuovo indirizzo IP del
 contatto a tutti gli utenti connessi, utilizzando il metodo 
\emph on
broadcastToAll(WebSocketPacket).
 
\emph default
Infine rimuoverà il connettore da 
\emph on
connectedUsers
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.server.transfer.CallTransfer
\family default

\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.transfer.CallTransfer"

\end_inset


\end_layout

\begin_layout Standard
La classe CalTransfer si occupa di gestire il traffico di pacchetti per
 effettuare l'inizializzazione di una comunicazione audio/video
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/server/transfer/pdf/CallTransfer.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption

\begin_layout Plain Layout

\lang english
Classe CallTransfer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Estende:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.transfer.ListenerTransfer
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Comunica con:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.client.communication.CallCommunication
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.communication.NotificationCommunication
\end_layout

\end_deeper
\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
[void] processToken(WebSocketServerTokenEvent, Token):
\series default
metodo per la gestione dei token in arrivo.
 Per ogni token che gestirà, invocherà il metodo 
\emph on
getUserConnector(String)
\emph default
, usando come parametro lo username presente nel token, per trovare il connettor
e corrispondente.
 Se non esiste invierà al connettore che ha effettuato la richiesta un pacchetto
 con tipo 
\emph on
answeredCall
\emph default
 avente come risposta 
\emph on
error
\emph default
.
 Se il connettore esiste risponderà con un pacchetto di tipo diverso a seconda
 della richiesta:
\end_layout

\begin_deeper
\begin_layout Itemize
richiesta di tipo 
\emph on
call, 
\emph default
invierà un pacchetto di tipo 
\emph on
call, 
\emph default
contenente il tipo di chiamata, passatogli dal client, e lo username dell'utente
 che ha effettuato la richiesta
\end_layout

\begin_layout Itemize
richiesta di tipo 
\emph on
answeredCall, 
\emph default
invierà un pacchetto di tipo 
\emph on
answeredCall
\emph default
, avente come risposta 
\emph on
true
\end_layout

\begin_layout Itemize
richiesta di tipo 
\emph on
refuseCall, 
\emph default
invierà un pacchetto di tipo 
\emph on
answeredCall
\emph default
, avente come risposta 
\emph on
false
\end_layout

\begin_layout Itemize
richiesta di tipo 
\emph on
busy, 
\emph default
invierà un pacchetto di tipo 
\emph on
answeredCall
\emph default
, avente come risposta 
\emph on
busy
\end_layout

\begin_layout Itemize
richiesta di tipo 
\emph on
offer, 
\emph default
invierà un pacchetto contentent l'attributo 
\emph on
description 
\emph default
passatogli dal client che ha effettuato la richiesta
\end_layout

\begin_layout Itemize
richiesta di tipo 
\emph on
candidate, 
\emph default
invierà un pacchetto contentent l'attributo 
\emph on
cand 
\emph default
passatogli dal client che ha effettuato la richiesta
\end_layout

\begin_layout Itemize
richiesta di tipo 
\emph on
endCall, 
\emph default
invierà un pacchetto di tipo 
\emph on
endCall
\end_layout

\begin_layout Itemize
richiesta di tipo 
\emph on
candidateReady, 
\emph default
invierà un pacchetto di tipo 
\emph on
candidateReady
\end_layout

\end_deeper
\begin_layout Subsubsection

\family typewriter
mytalk.server.transfer.ChatTransfer
\family default

\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.transfer.ChatTransfer"

\end_inset


\end_layout

\begin_layout Standard
La classe ChatTransfer si occupa della registrazione dei messaggi di chat
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/server/transfer/pdf/ChatTransfer.pdf
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Classe ChatTransfer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Estende:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.transfer.ListenerTransfer
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Comunica con:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.client.communication.ChatCommunication
\end_layout

\end_deeper
\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
[void] processToken(WebSocketServerTokenEvent, Token):
\series default
metodo per la gestione dei token in arrivo.
 Gestirà i token aventi come tipo 
\emph on
sendText
\emph default
, invocherà il metodo 
\emph on
getUserConnector(String)
\emph default
, usando come parametro lo username presente nel token, per trovare il connettor
e corrispondente.
 Se il connettore non è presente, invierà al connettore che ha effettuato
 la richiesta un pacchetto con tipo 
\emph on
notDelivered,
\emph default
 altrimenti manderà al connettore trovato un pacchetto di tipo 
\emph on
sendText
\emph default
, avente come attributi il messaggio ricevuto in arrivo e lo username del
 mittente
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.server.transfer.FileTransfer
\family default

\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.transfer.FileTransfer"

\end_inset


\end_layout

\begin_layout Standard
La classe FileTransfer si occupa della gestione dei file inviati
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/server/transfer/pdf/FileTransfer.pdf
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Classe FileTransfer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Estende:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.transfer.ListenerTransfer
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Comunica con:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.client.communication.FileCommunication
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.communication.NotificationCommunication
\end_layout

\end_deeper
\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
[void] processToken(WebSocketServerTokenEvent, Token):
\series default
metodo per la gestione dei token in arrivo.
 Gestirà i token aventi come tipo 
\emph on
file
\emph default
, invocherà il metodo 
\emph on
getUserConnector(String)
\emph default
, usando come parametro lo username presente nel token, per trovare il connettor
e corrispondente.
 Infine Manderà al connettore trovato un pacchetto con lo stesso, avente
 come attributi il file ricevuto in arrivo e lo username del mittente
\end_layout

\begin_layout Subsubsection

\family typewriter
mytalk.server.transfer.RecordMessageTransfer
\family default

\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.transfer.RecordMessageTransfer"

\end_inset


\end_layout

\begin_layout Standard
La classe RecordMessageTransfer si occupa della registrazione dei messaggi
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/server/transfer/pdf/RecordMessageTransfer.pdf
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Classe RecordMessageTransfer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.usermanager.UserManager
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.server.shared.RecordMessage
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Estende:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.transfer.ListenerTransfer
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Comunica con:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.client.communication.RecordMessageCommunication
\end_layout

\begin_layout Itemize

\family typewriter
mytalk.client.communication.NotificationCommunication
\end_layout

\end_deeper
\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
[void] processToken(WebSocketServerTokenEvent, Token):
\series default
 metodo per la gestione dei token in arrivo.
 in particolare si occuperà di quelli aventi come tipo:
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
sendRecord
\emph default
: invocherà il metodo 
\emph on
createMessage(String, String, String, String)
\emph default
 per salvare il messaggio nel server, usando come parametri quelli ricevuti.
 Successivamente invocherà il metodo 
\emph on
getUserConnector(String)
\emph default
, usando come parametro lo username presente nel token, per trovare il connettor
e corrispondente.
 Se è presente, gli invierà un pacchetto di tipo 
\emph on
record
\emph default
, contente le informazioni ricevute
\end_layout

\begin_layout Itemize

\emph on
removerRecord:
\emph default
 invocherà i metodi 
\emph on
getMessage(String, String, String, String) 
\emph default
e 
\emph on
removeMessage(RecordMessage) 
\emph default
della classe UserManager per trovare ed eliminare il messaggio dal server
\end_layout

\end_deeper
\begin_layout Subsubsection
mytalk.server.transfer.UserTransfer
\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.transfer.UserTransfer"

\end_inset


\end_layout

\begin_layout Standard
La classe UserTransfer si occupa della gestione delle modifiche dei dati
 dell'utente
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/server/transfer/pdf/UserTransfer.pdf
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Classe UserTransfer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.usermanager.UserManager
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Estende:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.server.transfer.ListenerTransfer
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Comunica con:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
mytalk.client.communication.ChatCommunication
\end_layout

\end_deeper
\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
[void] processToken(WebSocketServerTokenEvent, Token):
\series default
 metodo per la gestione dei token in arrivo.
 in particolare si occuperà di quelli aventi come tipo:
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
checkCredentials
\emph default
: invocherà il metodo 
\emph on
checkPassword(User, String)
\emph default
, passandogli come parametro lo user corrispondente all'utente che ha effettuato
 la richiesta e la password presente nel pacchetto, e invierà al client
 la risposta ottenuta
\end_layout

\begin_layout Itemize

\emph on
changeData:
\emph default
 invocherà i metodi 
\emph on
setUserData(User, String, String) 
\emph default
e 
\emph on
setPassword(UserString) 
\emph default
per modificare i dati dell'utente con quelli ricevuti nel pacchetto
\end_layout

\end_deeper
\end_body
\end_document
