#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Subsection
Package Dao
\end_layout

\begin_layout Standard
Il package Dao contiene tutte le classi che si occupano di eseguire le operazion
i eseguite sul database
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/package.dao.pdf
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Package Dao
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Paragraph

\series bold
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
Il package utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize
mytalk.server.shared
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Il package è utilizzato da:
\end_layout

\begin_deeper
\begin_layout Itemize
mytalk.server.usermanager
\end_layout

\end_deeper
\begin_layout Paragraph

\series bold
Costituito da:
\end_layout

\begin_layout Itemize
mytalk.server.dao.JavaConnectionSQLite (vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.dao.JavaConnection"

\end_inset

 )
\end_layout

\begin_layout Itemize
mytalk.server.dao.LoginDao (vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.dao.LoginDao"

\end_inset

)
\end_layout

\begin_layout Itemize
mytalk.server.dao.LoginDaoSQL (vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.dao.LoginDaoSQL"

\end_inset

 )
\end_layout

\begin_layout Itemize
mytalk.server.dao.RecordMessageDao (vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.dao.RecordMessageD-1"

\end_inset

)
\end_layout

\begin_layout Itemize
mytalk.server.dao.RecordMessageDaoSQL (vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.dao.RecordMessageD"

\end_inset

 )
\end_layout

\begin_layout Itemize
mytalk.server.dao.UserDao (vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.dao.UserDao"

\end_inset

)
\end_layout

\begin_layout Itemize
mytalk.server.dao.UserDaoSQL (vedasi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mytalk.server.dao.UserDaoSQL"

\end_inset

)
\end_layout

\begin_layout Subsubsection
mytalk.server.dao.JavaConnectionSQLite
\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.dao.JavaConnection"

\end_inset


\end_layout

\begin_layout Standard
La classe JavaConnectionSQLite contiene tutti i metodi per l'esecuzione
 di query all'interno del database
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/dao.JavaConnectionSQLite.pdf
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Classe JavaConnectionSQLite
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
La classe è utilizzata da:
\end_layout

\begin_deeper
\begin_layout Itemize
mytalk.server.dao.UserDaoSQL
\end_layout

\begin_layout Itemize
mytalk.server.dao.LoginDaoSQL
\end_layout

\begin_layout Itemize
mytalk.server.dao.RecordMessageDaoSQL
\end_layout

\end_deeper
\begin_layout Paragraph
Attributi privati
\end_layout

\begin_layout Itemize

\series bold
Connection connection:
\series default
 riferimento alla connessione al database di riferimento
\end_layout

\begin_layout Itemize

\series bold
Statement statement: 
\series default
riferimento alla risorsa impiegata per eseguire query sul database
\end_layout

\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
JavaConnectionSQLite(): 
\series default
costruttore che crea la connessione al database.
 Se la connessione non va buon fine, vengono lanciate delle eccezioni, che
 stamperanno a video l'errore riscontrato
\end_layout

\begin_layout Itemize

\series bold
void finalize():
\series default
 distruttore della classe JavaConnectionSQLite.
 Prima di distruggere una istanza, la connessione al database deve essere
 chiusa.
 Se la chiusura della connessione lancia eccezioni, stamperà a video l'errore
 riscontrato
\end_layout

\begin_layout Itemize

\series bold
ResultSet select(String table, String column, String condition, String extra):
\series default
 metodo che ritorna una tupla di valori, della tabella indicata, che rispettano
 i parametri di controllo indicati.
 Quindi eseguirà la query da eseguire sul database utilizzando i parametri:
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
table:
\emph default
 rappresenta il nome della tabella su cui eseguire la query
\end_layout

\begin_layout Itemize

\emph on
column:
\emph default
 rappresenta le colonne che saranno selezionate
\end_layout

\begin_layout Itemize

\emph on
condition: 
\emph default
condizione principale applicata per effettuare la selezione
\end_layout

\begin_layout Itemize

\emph on
extra:
\emph default
 condizioni extra
\end_layout

\begin_layout Standard
Se la funzione di esecuzione della query non lancerà alcuna eccezione, il
 metodo ritornerà un 
\emph on
ResultSet 
\emph default
denominato
\emph on
 rs
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
boolean executeUpdate(String query): 
\series default
metodo che esegue la query passata nel database, aggiornandolo.
 Se la query viene conclusa con successo il metodo ritornerà 
\emph on
true
\emph default
, altrimenti ritornerà
\emph on
 false
\end_layout

\begin_layout Subsubsection
mytalk.server.dao.LoginDao 
\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.dao.LoginDao"

\end_inset


\end_layout

\begin_layout Standard
L'nterfaccia LoginDao gestisce tutti i dati che riguardano i tentativi di
 connessione e disconnessione al sistema.
 Fornisce l'interfaccia minima necessaria a tutte le classi derivate che
 dovranno offrire tale servizio
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename img/dao.LoginDao.pdf
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Interfaccia LoginDao
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
La classe utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize
mytalk.server.shared.User
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
La classe è utilizzata da:
\end_layout

\begin_deeper
\begin_layout Itemize
mlmo
\end_layout

\end_deeper
\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
User LoginDao(String username, String password, String IP):
\series default
 metodo che controllerà la correttezza dei dati inseriti da un utente per
 connettersi al sistema
\end_layout

\begin_layout Itemize

\series bold
boolean logout(User user):
\series default
 metodo che effettuerà la disconnessione dal sistema
\end_layout

\begin_layout Subsubsection
mytalk.server.dao.LoginDaoSQL
\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.dao.LoginDaoSQL"

\end_inset


\end_layout

\begin_layout Standard
La classe LoginDaoSQL si occupa di gestire tutti i dati riguardanti i tentativi
 di autenticazione all'interno del sistema.
 È l'implementazione di mytalk.server.dao.LoginDao
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/dao.LoginDaoSQL.pdf
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Classe LoginDaoSQL
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
La classe utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize
mytalk.server.dao.JavaConnectionSQLite
\end_layout

\begin_layout Itemize
mytalk.server.shared.UserList
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
La classe è utilizzata da:
\end_layout

\begin_deeper
\begin_layout Itemize
mytalk.server.usermanager.AuthenticationManager
\end_layout

\end_deeper
\begin_layout Paragraph
Attributi privati
\end_layout

\begin_layout Itemize

\series bold
JavaConnectionSQLite connection:
\series default
 riferimento all'istanza della classe JavaConnectionSQLite contente i riferiment
i al server
\end_layout

\begin_layout Itemize

\series bold
UserList users: 
\series default
riferimento alla lista degli utenti registrati nel database
\end_layout

\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
LoginDaoSQL(JavaConnectionSQLite connection): 
\series default
costruttore della classe che dovrà impostare il valore degli attributi secondo
 il valore dei parametri passati
\end_layout

\begin_layout Itemize

\series bold
User login(String username, String password, String IP): 
\series default
metodo che effettua il login dell'utente.
 Deve controllare la correttezza dei dati inseriti.
 Crea quindi una query per verificare se esiste un utente con lo 
\emph on
username
\emph default
 ricevuto e che la password associata a tale utente sia uguale a quella
 ricevuta.
 Se non dovesse esistere tale parametro lancerà una eccezione, in caso contrario
 creerà una query per effettuare l'aggiornamento dell'indirizzo IP dell'utente
 che vuole effettuare la connessione, successivamente viene aggiornata anche
 l'istanza dell'utente nel package mytalk.server.shared.User
\end_layout

\begin_layout Itemize

\series bold
boolean logout(User user): 
\series default
metodo che effettua il logout dell'utente.
 Aggiornerà l'indirizzo IP, impostandolo a 0, nell'istanza dell'utente contenuta
 nel package mytalk.server.shared.
 Successivamente si effettuerà l'aggiornamento dell'utente presente nel
 database impostanto il suo indirizzo IP a 0
\end_layout

\begin_layout Subsubsection
mytalk.server.dao.RecordMessageDao 
\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.dao.RecordMessageD-1"

\end_inset


\end_layout

\begin_layout Standard
L'interfaccia RecordMessageDao gestisce tutti i dati che riguardano i messaggi
 differiti inviati ai vari utenti.
 Fornisce l'interfaccia minima necessaria a tutte le classi derivate che
 dovranno offrire tale servizio
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename img/dao.RecordMessageDao.pdf
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout
Interfaccia RecordMessageDao
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazione d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
La classe utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize
mytalk.server.shared.RecordMessage
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
La classe è utilizzata da:
\end_layout

\begin_deeper
\begin_layout Itemize
xxxxxx
\end_layout

\end_deeper
\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
Vector<RecordMessage> getMessages(String username):
\series default
 metodo che ritorna il vettore dei messaggi differiti che sono stati mandati
 ad un utente
\end_layout

\begin_layout Itemize

\series bold
RecordMessage createMessage(String sender, String addressee, String path,
 Date date): 
\series default
metodo che crea un messaggio differito nel database
\end_layout

\begin_layout Itemize

\series bold
boolean removeMessage(RecordMessage message): 
\series default
metodo che elimina un messaggio differito dal database
\end_layout

\begin_layout Subsubsection
mytalk.server.dao.RecordMessageDaoSQL 
\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.dao.RecordMessageD"

\end_inset


\end_layout

\begin_layout Standard
La classe RecordMessageDaoSQL si occupa di gestire tutti i dati riguardanti
 i messaggi differiti.
 È l'implementazione di mytalk.server.dao.RecordMessageDao
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/dao.RecordMessageDaoSQL.pdf
	scale 80

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Classe RecordMessageDaoSQLite
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazione d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
La classe utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize
mytalk.server.dao.JavaConnectionSQLite
\end_layout

\begin_layout Itemize
mytalk.server.shared.RecordMessage
\end_layout

\begin_layout Itemize
mytalk.server.shared.User
\end_layout

\end_deeper
\begin_layout Paragraph
Attributi privati
\end_layout

\begin_layout Itemize

\series bold
JavaConnectionSQLite connection:
\series default
 riferimento all'istanza della classe JavaConnectionSQLite contente i riferiment
i al server
\end_layout

\begin_layout Itemize

\series bold
UserList users: 
\series default
riferimento alla lista degli utenti registrati nel database
\end_layout

\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
RecordMessageDaoSQL(JavaConnectionSQLite connection, UserList users):
\series default
 costruttore della classe che dovrà impostare il valore degli attributi
 secondo il valore dei parametri passati
\end_layout

\begin_layout Itemize

\series bold
Vector<RecordMessage> getMessages(String username): 
\series default
metodo che ritorna il vettore dei messaggi differiti che sono stati mandati
 ad un utente.
 Il metodo deve verificare che esiste realmente un utente associato allo
 
\emph on
username
\emph default
 ricevuto, se esiste si crea la query da effettuare per trovare tutti i
 messaggi che come destinatario hanno username.
 Se la query restituisce almeno un messaggio differito, lo inserisce nel
 vettore dell'utente.
\end_layout

\begin_layout Itemize

\series bold
RecordMessage createMessage(String sender, String addressee, String path,
 Date date): 
\series default
metodo che crea un messaggio differito nel database.
 Deve verificare che l'utente destinatario esista nel database.
 Successivamente deve creare la query per aggiungere nel database il messaggio.
 Se l'aggiunta avviene con successo, viene aggiornata anche l'istanza dell'utent
e nel package mytalk.server.shared.User.
 Il metodo ritorna il messaggio creato, che sarà 
\emph on
null
\emph default
 nel caso in cui la creazione non andrà a buon fine
\end_layout

\begin_layout Itemize

\series bold
boolean removeMessage(RecordMessage message): 
\series default
metodo che elimina un messaggio differito dal database.
 Il metodo deve creare la query per la cancellazione del messaggio differito
 nel database.
 Successivamente viene aggiornata anche l'istanza dell'utente nel package
 mytalk.server.shared.User.
 Nel caso l'eliminazione avviene con successo il metodo ritorna 
\emph on
true
\emph default
, in caso contrario ritorna 
\emph on
false
\end_layout

\begin_layout Subsubsection
mytalk.server.dao.UserDao
\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.dao.UserDao"

\end_inset


\end_layout

\begin_layout Standard
L'interfaccia UserDao gestisce tutti i dati che riguardano gli utenti.
 Fornisce l'interfaccia minima necessaria a tutte le classi derivate che
 dovranno offrire tale servizio
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename img/dao.UserDao.pdf
	scale 70

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Interfaccia UserDao
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazione d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
La classe utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize
mytalk.server.shared.User
\end_layout

\end_deeper
\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
User createUser(String username, String password, String name, String surname,
 String IP): 
\series default
metodo che crea un utente nel database
\end_layout

\begin_layout Itemize

\series bold
boolean removeUser(String username): 
\series default
metodo che elimina un utente dal database
\end_layout

\begin_layout Itemize

\series bold
boolean setPassword(String username, String password): 
\series default
metodo che imposta la password all'utente corrispondente ad 
\emph on
username
\emph default
 con il nuovo valore
\end_layout

\begin_layout Itemize

\series bold
boolean setName(String username, String name): 
\series default
metodo che imposta il nome dell'utente corrispondente ad 
\emph on
username
\emph default
 con il nuovo valore
\end_layout

\begin_layout Itemize

\series bold
boolean setSurname(String username, String surname): 
\series default
metodo che imposta il cognome dell'utente corrispondente ad 
\emph on
username
\emph default
 con il nuovo valore
\end_layout

\begin_layout Subsubsection
mytalk.server.dao.UserDaoSQL
\begin_inset CommandInset label
LatexCommand label
name "sub:mytalk.server.dao.UserDaoSQL"

\end_inset


\end_layout

\begin_layout Standard
La classe UserDaoSQL si occupa di gestire tutti i dati riguardanti i messaggi
 differiti.
 È l'implementazione di mytalk.server.dao.UserDao
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/dao.UserDaoSQL.pdf
	scale 80

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Classe UserDaoSQL
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Itemize

\series bold
La classe utilizza:
\end_layout

\begin_deeper
\begin_layout Itemize
mytalk.server.dao.JavaConnectionSQLite
\end_layout

\begin_layout Itemize
mytalk.server.shared.UserList
\end_layout

\begin_layout Itemize
mytalk.server.shared.User
\end_layout

\end_deeper
\begin_layout Paragraph
Attributi privati
\end_layout

\begin_layout Itemize

\series bold
JavaConnectionSQLite connection:
\series default
 riferimento all'istanza della classe JavaConnectionSQLite contente i riferiment
i al server
\end_layout

\begin_layout Itemize

\series bold
UserList users: 
\series default
riferimento alla lista degli utenti registrati nel database
\end_layout

\begin_layout Paragraph
Metodi pubblici
\end_layout

\begin_layout Itemize

\series bold
UserDaoSQL(JavaConnectionSQLite connection): 
\series default
costruttore della classe che dovrà impostare il valore degli attributi secondo
 il valore dei parametri passati
\end_layout

\begin_layout Itemize

\series bold
User createUser(String username, String password, String name, String surname,
 String IP): 
\series default
metodo che crea un utente con i parametri passati
\begin_inset Foot
status open

\begin_layout Plain Layout
L'esistenza di un utente con lo username uguale a quello passato come parametro,
 verrà accertata nella classe mytalk.server.dao.shared.UserList.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\series bold
boolean removeUser(String username): 
\series default
metodo che elimina un utente dal database.
 Se l'eliminazione è andata a buon fine ritorna 
\emph on
true
\emph default
, altrimenti ritorna 
\emph on
false
\end_layout

\begin_layout Itemize

\series bold
boolean setPassword(String username, String password): 
\series default
metodo che imposta la password dell'utente con il nuovo valore passato nel
 database.
 Se il cambiamento è andato a buon fine, il metodo ritorna 
\emph on
true
\emph default
, altrimenti ritorna 
\emph on
false
\end_layout

\begin_layout Itemize

\series bold
boolean setName(String username, String name):
\series default
 metodo che imposta il nome dell'utente con il nuovo valore passato nel
 database.
 Se il cambiamento è andato a buon fine, si aggiorna anche l'istanza dell'utente
 presente in mytalk.server.shared.User ed il metodo ritorna 
\emph on
true
\emph default
, altrimenti ritorna 
\emph on
false
\end_layout

\begin_layout Itemize

\series bold
boolean setSurname(String username, String surname):
\series default
 metodo che imposta il cognome dell'utente con il nuovo valore passato nel
 database.
 Se il cambiamento è andato a buon fine, si aggiorna anche l'istanza dell'utente
 presente in mytalk.server.shared.User ed il metodo ritorna 
\emph on
true
\emph default
, altrimenti ritorna 
\emph on
false
\end_layout

\end_body
\end_document
