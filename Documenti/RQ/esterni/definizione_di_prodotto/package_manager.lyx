#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Subsection

\lang italian
Package Manager 
\begin_inset CommandInset label
LatexCommand label
name "sub:Package-Manager"

\end_inset


\end_layout

\begin_layout Subsubsection

\lang italian
UserDataManager
\end_layout

\begin_layout Standard

\series bold
\lang italian
Funzione
\end_layout

\begin_layout Standard
\noindent
\align left

\series bold
\lang italian
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Standard

\lang italian
xxxxxxxxx
\end_layout

\begin_layout Standard
\noindent
\align left

\series bold
\lang italian
Attributi
\end_layout

\begin_layout Standard
\noindent
\align left

\series bold
\lang italian
Metodi
\end_layout

\begin_layout Standard

\lang italian
------------------------------------
\end_layout

\begin_layout Standard

\lang italian
non ha campi dati
\end_layout

\begin_layout Standard

\lang italian
serve per effettuare:
\end_layout

\begin_layout Itemize

\lang italian
Registrazione
\end_layout

\begin_layout Itemize

\lang italian
Modifica nome
\end_layout

\begin_layout Itemize

\lang italian
Modifica cognome
\end_layout

\begin_layout Itemize

\lang italian
Modifica password
\end_layout

\begin_layout Paragraph

\lang italian
Metodi
\end_layout

\begin_layout Standard

\lang italian
Registrazione (user,nome,cognome,pass){
\end_layout

\begin_layout Standard

\lang italian
si deve verificare che non ci siano utenti che utilizzino lo user richiesto;
\end_layout

\begin_layout Standard

\lang italian
se lo si usa ->errore
\end_layout

\begin_layout Standard

\lang italian
se non lo si usa -> creo utente
\end_layout

\begin_layout Standard

\lang italian
}
\end_layout

\begin_layout Standard

\lang italian
Modifica_pass(user,new_pass){
\end_layout

\begin_layout Standard

\lang italian
cerco l'utente user e poi user.pass=new_pass}
\end_layout

\begin_layout Standard

\lang italian
Modifica_nome(user,new_nome){
\end_layout

\begin_layout Standard

\lang italian
cerco l'utente user e poi user.nome=new_nome}
\end_layout

\begin_layout Standard

\lang italian
Modifica_cognome(user,new_cognome){
\end_layout

\begin_layout Standard

\lang italian
cerco l'utente user e poi user.cognome=new_cognome}
\end_layout

\begin_layout Subsubsection

\lang italian
AuthenticationManager
\end_layout

\begin_layout Standard

\series bold
\lang italian
Funzione
\end_layout

\begin_layout Standard
\noindent
\align left

\series bold
\lang italian
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Standard

\lang italian
xxxxxxxxx
\end_layout

\begin_layout Standard
\noindent
\align left

\series bold
\lang italian
Attributi
\end_layout

\begin_layout Standard
\noindent
\align left

\series bold
\lang italian
Metodi
\end_layout

\begin_layout Standard

\lang italian
-----------------------------------
\end_layout

\begin_layout Standard

\lang italian
serve per effettuare login/logout
\end_layout

\begin_layout Standard

\lang italian
no campi dati
\end_layout

\begin_layout Paragraph

\lang italian
Metodi
\end_layout

\begin_layout Standard

\lang italian
login(user,pass,IP){
\end_layout

\begin_layout Standard

\lang italian
esiste user? ->se sì errore
\end_layout

\begin_layout Standard

\lang italian
pass corretta? -> se sì errore
\end_layout

\begin_layout Standard

\lang italian
user.UserDataDao.setIP(IP)
\end_layout

\begin_layout Standard

\lang italian
check_message(user) //metodo userDataDAO
\end_layout

\begin_layout Standard

\lang italian
}
\end_layout

\begin_layout Standard

\lang italian
logout(user){
\end_layout

\begin_layout Standard

\lang italian
user.UserDataDao.set
\end_layout

\begin_layout Standard

\lang italian
}
\end_layout

\begin_layout Standard

\lang italian
check_message(user)->applica query per sapere se esistono messaggi differiti
 con destinatario=user
\end_layout

\begin_layout Subsubsection

\lang italian
CallManager
\end_layout

\begin_layout Standard

\series bold
\lang italian
Funzione
\end_layout

\begin_layout Standard
\noindent
\align left

\series bold
\lang italian
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Standard

\lang italian
xxxxxxxxx
\end_layout

\begin_layout Standard
\noindent
\align left

\series bold
\lang italian
Attributi
\end_layout

\begin_layout Standard
\noindent
\align left

\series bold
\lang italian
Metodi
\end_layout

\begin_layout Standard

\lang italian
----------------------------------------
\end_layout

\begin_layout Standard

\lang italian
campi dati:nessuno
\end_layout

\begin_layout Standard

\lang italian
Serve per mettere in comunicazione 2 o più utenti
\end_layout

\begin_layout Paragraph

\lang italian
Metodi
\end_layout

\begin_layout Standard

\lang italian
Creazione_canali_tra_due_utenti(IP_caller,IP_dest) {Crea il canale di comunicazi
one tramite WebRTC;}
\end_layout

\begin_layout Standard

\lang italian
Termina_chiamata ->?
\end_layout

\begin_layout Standard

\lang italian
Teleconferenza -> ?
\end_layout

\begin_layout Subsubsection

\lang italian
RecordMessageManager
\end_layout

\begin_layout Standard

\series bold
\lang italian
Funzione
\end_layout

\begin_layout Standard
\noindent
\align left

\series bold
\lang italian
Relazioni d'uso con altri moduli
\end_layout

\begin_layout Standard

\lang italian
xxxxxxxxx
\end_layout

\begin_layout Standard
\noindent
\align left

\series bold
\lang italian
Attributi
\end_layout

\begin_layout Standard
\noindent
\align left

\series bold
\lang italian
Metodi
\end_layout

\begin_layout Standard

\lang italian
--------------------------------
\end_layout

\begin_layout Standard

\lang italian
campi dati: nessuno
\end_layout

\begin_layout Paragraph

\lang italian
Metodi
\end_layout

\begin_layout Standard

\lang italian
Record_set(RecordMessage obj) -> chiama il RecordMessageDato per salvare
 il messaggio differito nel DB
\end_layout

\begin_layout Standard

\lang italian
CreateNotification(mittente, destinatario) ->notification_record_message()
 //metodo in NotificationTransfer
\end_layout

\begin_layout Standard

\lang italian
gestore_invio_oggetto(mittente,destinatario) {
\end_layout

\begin_layout Enumerate

\lang italian
sapere qual è l'id del messaggio tramite metodo know_message_id
\end_layout

\begin_layout Enumerate

\lang italian
riceve l'id e prende tale oggetto da shared
\end_layout

\begin_layout Enumerate

\lang italian
preleva_message(id) //metodo di shared 
\end_layout

\begin_layout Enumerate

\lang italian
send_message(id)
\end_layout

\begin_layout Standard

\lang italian
}
\end_layout

\begin_layout Standard

\lang italian
know_message_id(mittente,destinatario) ->chiede a dao l'id del messaggio
\end_layout

\begin_layout Standard

\lang italian
send_message(id)->invia a transfer il messaggio che 
\begin_inset Quotes eld
\end_inset

crea il canale ?
\begin_inset Quotes erd
\end_inset


\end_layout

\end_body
\end_document
